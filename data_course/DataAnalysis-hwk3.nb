(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    258636,       4900]
NotebookOptionsPosition[    255630,       4803]
NotebookOutlinePosition[    255984,       4819]
CellTagsIndexPosition[    255941,       4816]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Testing Radiation Dose vs Solid Cancer Rate Models",
 FontSize->24,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.696696210154077*^9, 3.696696234060876*^9}, {
  3.69669630560911*^9, 3.696696352100922*^9}, {3.6966967201636057`*^9, 
  3.69669672105554*^9}}],

Cell["Data:", "Text",
 CellChangeTimes->{{3.696696885745516*^9, 3.696696890251996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"#", " ", "data", " ", "pts"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"data", "'"}], "s", " ", "row", " ", 
    RowBox[{"format", ":", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{
       "total", " ", "length", " ", "of", " ", "error", " ", "bars"}]}], 
      "}"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"datainch", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.13", ",", "0", ",", "0.31"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.63", ",", "0.19", ",", "0.50"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.31", ",", "0.75", ",", "0.63"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.13", ",", "0.50", ",", "1.25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.63", ",", "1.19", ",", "1.13"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.63", ",", "2.25", ",", "1.50"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.69", ",", "3.38", ",", "2.19"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.75", ",", "2.69", ",", "2.38"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.75", ",", "4.38", ",", "3.69"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.81", ",", "4.69", ",", "4.63"}], "}"}]}], "}"}]}], ";"}], 
  " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Conversion", " ", "from", " ", "inches", " ", "to", " ", "values", " ", 
    "of", " ", "the", " ", "actual", " ", "data", " ", "pts"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xconv", " ", "=", " ", 
    RowBox[{"1", "/", "4.2"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"inches", " ", "\[Rule]", " ", 
    RowBox[{"dose", " ", "in", " ", "Sv"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yconv", " ", "=", " ", 
    RowBox[{"1", "/", "4.2"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"inches", " ", "\[Rule]", " ", 
    RowBox[{"excess", " ", "relative", " ", "risk", " ", 
     RowBox[{"(", "ERR", ")"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"errconv", " ", "=", " ", 
    RowBox[{"yconv", "/", "4"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"inches", " ", "->", " ", 
    RowBox[{
     RowBox[{"st", ".", " ", "dev", ".", " ", "of"}], " ", "ERR"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Convert", " ", "data"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datapts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"datainch", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", "xconv"}], ",", 
         "0.001"}], "]"}], ",", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"datainch", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "*", "yconv"}], ",", 
         "0.001"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stdev", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"datainch", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", "errconv"}], ",", 
       "0.001"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Data from Solid Cancer Plot\>\"", ",", "SpanFromLeft"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\>\"", ",", "\"\<Radiation Dose (Sv)\>\"", ",", 
         "\"\<Excess Relative Risk (ERR)\>\"", ",", 
         "\"\<St.Dev. of ERR\>\""}], "}"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.\>\""}], ",", 
         RowBox[{"datapts", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"datapts", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"stdev", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0F1Ik3EYBfA10YutSe5F6ENCaXozSc0hklsklR9rJbMhORqLOSu8UNSa
MXKhc+EWOLVhH6MQHeLQ2RZkFzI1FZmbRajkmMzcJlIp2QqJcrXe8794+HHg
wIEnQ9VQWctkMBh8+mBnl8O6adouLvS2jcExSjkPj5w2eiD1fdLBerhd3Cj0
TcEWrt0LuyjlBnQe4G/CV57lXSjwbf2EJZlNMfiAW5TGRp6r4cEPfdbFg7Q/
fPElaHFF/ZDXfSwI7w+Ko3DxffoenAysJHFoDVkiCgal5SfhcuoTou6w+xRM
58yI4YxRUwGzYwIFNH4qV8NE7WgzLDy+3wJtVVfuQqHW7CL9XyvzcO+i/V0y
bW/nvTV4XmCuOkrLHh8ijuu1cqjjS9Ww6VJeAyyJVN+B9bq4Ho78Lu2FHQli
B7Td/kZs1rPewIKUHqLzS/ssLKs7NAcnYokeuCVwEAeiJ5Zgll0SgOGbvI+r
tExDsh+e9T4OwTqRPgwXrjZ+hXLr+i40h+Mpfvxl+C8X7lD+AnjNvU/st3wW
wXPqzDPQZFNJYCR0QwZHo7xqmB15RNTY6hXQ8mftOtTlP6uFbHaQeCsjoIH/
jKpW2CF73gadzhcGyJKvm2CpsLIftufkjMAhGdMFW196XkOlNHea7D29fCFE
K+G8LYP/AWBgZ5s=
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Data from Solid Cancer Plot\"\>", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"\"\>", "\<\"Radiation Dose (Sv)\"\>", "\<\"Excess Relative Risk \
(ERR)\"\>", "\<\"St.Dev. of ERR\"\>"},
    {"\<\"1.\"\>", "0.031`", "0.`", "0.018000000000000002`"},
    {"\<\"2.\"\>", "0.15`", "0.045`", "0.03`"},
    {"\<\"3.\"\>", "0.312`", "0.179`", "0.038`"},
    {"\<\"4.\"\>", "0.507`", "0.11900000000000001`", "0.074`"},
    {"\<\"5.\"\>", "0.626`", "0.28300000000000003`", "0.067`"},
    {"\<\"6.\"\>", "0.864`", "0.536`", "0.089`"},
    {"\<\"7.\"\>", "1.117`", "0.805`", "0.13`"},
    {"\<\"8.\"\>", "1.369`", "0.64`", "0.14200000000000002`"},
    {"\<\"9.\"\>", "1.607`", "1.043`", "0.22`"},
    {"\<\"10.\"\>", "1.86`", "1.117`", "0.276`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.696782244119873*^9, 3.696782276368037*^9, 3.696782905626237*^9, 
   3.696785323280439*^9, 3.696802865349453*^9, 3.696808750670267*^9, 
   3.696808881791781*^9, 3.696809335763303*^9, 3.696809410871105*^9, 
   3.696809508310466*^9, 3.69680962190945*^9, {3.6968096611314507`*^9, 
   3.6968096854816236`*^9}, {3.697196791995192*^9, 3.697196821820017*^9}, 
   3.6971969289407597`*^9, {3.697197204055732*^9, 3.697197208560102*^9}, 
   3.697198604004003*^9, 3.697203437964456*^9, 3.697216077117105*^9, 
   3.697307890157928*^9, 3.697328773502117*^9, 3.697328962277684*^9, 
   3.697446195851556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "Data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"datawitherror", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"datapts", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"ErrorBar", "[", 
          RowBox[{"2", "*", 
           RowBox[{"stdev", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"dataplot", "=", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{"datawitherror", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2.0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.1"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Radiation Dose (Sv)\>\"", ",", " ", 
         "\"\<Excess Relative Risk of Solid Cancer\>\""}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "16"}], ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.696782504217021*^9, 3.696782646502409*^9}, 
   3.696782676958343*^9, 3.696782716792686*^9, {3.6967829080687017`*^9, 
   3.696782909341983*^9}, {3.696783040008025*^9, 3.696783078205888*^9}, {
   3.6967831213537407`*^9, 3.696783127695653*^9}, {3.69678317009691*^9, 
   3.696783171487225*^9}, 3.696783202378632*^9, {3.696783612462277*^9, 
   3.696783620111882*^9}, {3.69678366741081*^9, 3.6967838060737343`*^9}, {
   3.696784001531177*^9, 3.6967841500448847`*^9}, {3.696785155745676*^9, 
   3.696785189218493*^9}, {3.696802880774351*^9, 3.6968028867257147`*^9}, {
   3.697197118611042*^9, 3.697197140926402*^9}, 3.697203432786421*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[{
       PointBox[{{0.031, 0.}, {0.15, 0.045}, {0.312, 0.179}, {0.507, 
        0.11900000000000001`}, {0.626, 0.28300000000000003`}, {0.864, 
        0.536}, {1.117, 0.805}, {1.369, 0.64}, {1.607, 1.043}, {1.86, 
        1.117}}], {{
         LineBox[{{0.031, 0.036000000000000004`}, {
          0.031, -0.036000000000000004`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.031, 0.036000000000000004`}], 
           Offset[{-1.5, 0}, {0.031, 0.036000000000000004`}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.031, -0.036000000000000004`}], 
           Offset[{-1.5, 0}, {0.031, -0.036000000000000004`}]}]}, {
         LineBox[{{0.15, 0.105}, {0.15, -0.015}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.15, 0.105}], Offset[{-1.5, 0}, {0.15, 0.105}]}],
          LineBox[{
          Offset[{1.5, 0}, {0.15, -0.015}], 
           Offset[{-1.5, 0}, {0.15, -0.015}]}]}, {
         LineBox[{{0.312, 0.255}, {0.312, 0.103}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.312, 0.255}], 
           Offset[{-1.5, 0}, {0.312, 0.255}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.312, 0.103}], 
           Offset[{-1.5, 0}, {0.312, 0.103}]}]}, {
         LineBox[{{0.507, 0.267}, {0.507, -0.028999999999999984`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.507, 0.267}], 
           Offset[{-1.5, 0}, {0.507, 0.267}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.507, -0.028999999999999984`}], 
           Offset[{-1.5, 0}, {0.507, -0.028999999999999984`}]}]}, {
         LineBox[{{0.626, 0.41700000000000004`}, {0.626, 
          0.14900000000000002`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.626, 0.41700000000000004`}], 
           Offset[{-1.5, 0}, {0.626, 0.41700000000000004`}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.626, 0.14900000000000002`}], 
           Offset[{-1.5, 0}, {0.626, 0.14900000000000002`}]}]}, {
         LineBox[{{0.864, 0.714}, {0.864, 0.35800000000000004`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.864, 0.714}], 
           Offset[{-1.5, 0}, {0.864, 0.714}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.864, 0.35800000000000004`}], 
           Offset[{-1.5, 0}, {0.864, 0.35800000000000004`}]}]}, {
         LineBox[{{1.117, 1.065}, {1.117, 0.545}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.117, 1.065}], 
           Offset[{-1.5, 0}, {1.117, 1.065}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.117, 0.545}], 
           Offset[{-1.5, 0}, {1.117, 0.545}]}]}, {
         LineBox[{{1.369, 0.924}, {1.369, 0.356}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.369, 0.924}], 
           Offset[{-1.5, 0}, {1.369, 0.924}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.369, 0.356}], 
           Offset[{-1.5, 0}, {1.369, 0.356}]}]}, {
         LineBox[{{1.607, 1.4829999999999999`}, {1.607, 0.603}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.607, 1.4829999999999999`}], 
           Offset[{-1.5, 0}, {1.607, 1.4829999999999999`}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.607, 0.603}], 
           Offset[{-1.5, 0}, {1.607, 0.603}]}]}, {
         LineBox[{{1.86, 1.669}, {1.86, 0.565}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.86, 1.669}], Offset[{-1.5, 0}, {1.86, 1.669}]}],
          LineBox[{
          Offset[{1.5, 0}, {1.86, 0.565}], 
           Offset[{-1.5, 0}, {1.86, 0.565}]}]}}},
      FontFamily->"Helvetica"]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 16, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Excess Relative Risk of Solid Cancer\"", TraditionalForm], 
     None}, {
     FormBox["\"Radiation Dose (Sv)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  LabelStyle->Bold,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.}, {-0.1, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6967826004161654`*^9, {3.696782649281026*^9, 3.696782678925655*^9}, 
   3.696782910173546*^9, 3.696783173073044*^9, 3.696783621261239*^9, {
   3.6967837935847883`*^9, 3.696783807759015*^9}, 3.696783895496724*^9, 
   3.696784008114745*^9, {3.696784049882118*^9, 3.696784070969812*^9}, {
   3.696784117264412*^9, 3.696784152492593*^9}, 3.69678532682467*^9, {
   3.696802872593225*^9, 3.696802888363821*^9}, {3.697197101782909*^9, 
   3.697197141523511*^9}, 3.697197280744318*^9, 3.697198803512514*^9, {
   3.697203435225832*^9, 3.697203440911677*^9}, 3.697216086771823*^9, 
   3.69730789550346*^9, 3.697329828325307*^9, 3.697446202922686*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Linear Relationship Fit",
 FontSize->18,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.696696365547844*^9, 3.6966964184889383`*^9}, {
  3.696696909625098*^9, 3.6966969501227903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fitLR", "[", 
   RowBox[{"x_", ",", "lambda_"}], "]"}], ":=", 
  RowBox[{"lambda", "*", "x"}]}]], "Input",
 CellChangeTimes->{{3.696697304751433*^9, 3.69669739789042*^9}, {
  3.6966974646859922`*^9, 3.69669747702442*^9}, {3.696785430024255*^9, 
  3.696785447410997*^9}, {3.696785507646818*^9, 3.696785695551729*^9}, {
  3.696785750556982*^9, 3.696785756596354*^9}}],

Cell["Maximum Likelihood Estimate", "Text",
 CellChangeTimes->{{3.696696779441166*^9, 3.6966967882151413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"datapts", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chisqLR", "[", "lambda_", "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "4"}], "*", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "-", 
        RowBox[{"fitLR", "[", 
         RowBox[{
          RowBox[{"datapts", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "lambda"}], "]"}]}],
        ")"}], "^", "2"}], "/", 
     RowBox[{"stdev", "^", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"MLE", "=", 
  RowBox[{"lambda", "/.", 
   RowBox[{"Last", "[", 
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      RowBox[{"chisqLR", "[", "lambda", "]"}], ",", "lambda"}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"LRminCHI", "=", 
  RowBox[{"chisqLR", "[", "MLE", "]"}]}]}], "Input",
 CellChangeTimes->{{3.696701417785224*^9, 3.696701428397189*^9}, {
   3.6967037788293657`*^9, 3.696703797134967*^9}, 3.696785753405308*^9, {
   3.6967857984359903`*^9, 3.6967858033383827`*^9}, {3.696790258732483*^9, 
   3.6967903000927677`*^9}, {3.6967903686416597`*^9, 3.696790400651288*^9}, {
   3.696790772063375*^9, 3.696790842852517*^9}, {3.696790923355329*^9, 
   3.696790996768437*^9}, {3.6967918362229*^9, 3.696791865362093*^9}, {
   3.6968076612257442`*^9, 3.6968076623161573`*^9}, {3.6968077663919897`*^9, 
   3.696807781354518*^9}}],

Cell[BoxData["0.5322074773540951`"], "Output",
 CellChangeTimes->{
  3.6967909057550373`*^9, {3.6967909358087673`*^9, 3.696790997599004*^9}, 
   3.696791936919821*^9, 3.696802897198605*^9, 3.6968040307315807`*^9, 
   3.6968077056474123`*^9, 3.697219751350401*^9, 3.6973298578076487`*^9}],

Cell[BoxData["2.925942542754755`"], "Output",
 CellChangeTimes->{
  3.6967909057550373`*^9, {3.6967909358087673`*^9, 3.696790997599004*^9}, 
   3.696791936919821*^9, 3.696802897198605*^9, 3.6968040307315807`*^9, 
   3.6968077056474123`*^9, 3.697219751350401*^9, 3.697329857809931*^9}]
}, Open  ]],

Cell["MLE Variance and Goodness-of-fit", "Text",
 CellChangeTimes->{{3.6966968117238493`*^9, 3.696696865555125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "List", " ", "of", " ", "\"\<Means\>\"", " ", "for", " ", "solid", " ", 
    "cancer", " ", "rate", " ", "distributions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ymean", "=", 
     RowBox[{"fitLR", "[", 
      RowBox[{
       RowBox[{"datapts", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "MLE"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Simulate", " ", "Data"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MLEsim", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CHIsim", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samplenum", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "0"}], ",", 
     RowBox[{"j", "<", "samplenum"}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{
      RowBox[{"ysim", "=", 
       RowBox[{"Array", "[", 
        RowBox[{"0", ",", "n"}], "]"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<", 
         RowBox[{"n", "+", "1"}]}], ",", 
        RowBox[{"k", "++"}], ",", 
        RowBox[{
         RowBox[{"ysim", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "=", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"ymean", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"stdev", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Find", " ", "MLE"}], "..."}], "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"y", "=", "ysim"}], ";", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"MLEsim", ",", 
        RowBox[{"lambda", "/.", 
         RowBox[{"Last", "[", 
          RowBox[{"FindMinimum", "[", 
           RowBox[{
            RowBox[{"chisqLR", "[", "lambda", "]"}], ",", "lambda"}], "]"}], 
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Find", " ", "Min", " ", 
         RowBox[{"Chi", "^", "2"}]}], "..."}], "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"AppendTo", "[", 
       RowBox[{"CHIsim", ",", 
        RowBox[{"chisqLR", "[", 
         RowBox[{"MLEsim", "[", 
          RowBox[{"[", 
           RowBox[{"j", "+", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.696696874575686*^9, 3.696696874896337*^9}, {
   3.696697048908207*^9, 3.696697144939941*^9}, {3.696697769306251*^9, 
   3.696697815047481*^9}, {3.696697915926765*^9, 3.696697917946797*^9}, {
   3.696698278475387*^9, 3.696698466670898*^9}, 3.696698517796177*^9, {
   3.6966987728964987`*^9, 3.696698774402028*^9}, {3.696698810414393*^9, 
   3.696698818544504*^9}, {3.6966988568827133`*^9, 3.696698922774078*^9}, {
   3.696699518895047*^9, 3.6966995512877083`*^9}, {3.696699936539386*^9, 
   3.696700008845174*^9}, {3.696700068133554*^9, 3.696700109432225*^9}, {
   3.696700165113268*^9, 3.696700199384753*^9}, {3.696700242566399*^9, 
   3.696700323795388*^9}, {3.696700514001656*^9, 3.696700709123028*^9}, {
   3.6967010294431353`*^9, 3.696701119098714*^9}, 3.696701228294838*^9, {
   3.6967012613435383`*^9, 3.696701399257016*^9}, 3.696701496212192*^9, {
   3.696701674256426*^9, 3.696701791635518*^9}, 3.696701924091153*^9, {
   3.696703852816544*^9, 3.696703971788478*^9}, {3.696791113461769*^9, 
   3.696791113822091*^9}, {3.69679114767103*^9, 3.69679126878153*^9}, {
   3.6967913136590557`*^9, 3.696791318764228*^9}, 3.696791354383563*^9, {
   3.69679148327701*^9, 3.6967915197526827`*^9}, {3.6967915809777737`*^9, 
   3.6967915865888987`*^9}, {3.696791662082683*^9, 3.696791668234805*^9}, {
   3.696791704503532*^9, 3.696791730415653*^9}, {3.696791890812435*^9, 
   3.6967919790442123`*^9}, {3.696802768472556*^9, 3.696802815957279*^9}, {
   3.696802936635556*^9, 3.696802938697991*^9}, {3.696803861785619*^9, 
   3.696803870475689*^9}, {3.69680404367352*^9, 3.696804054833247*^9}, {
   3.696804647924971*^9, 3.696804648590242*^9}, {3.696807790914858*^9, 
   3.696807798161871*^9}, {3.697217232377557*^9, 3.6972172422983007`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Calculate", " ", "Standard", " ", "Deviation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"MLEsim", ",", 
     RowBox[{"{", 
      RowBox[{"0.38", ",", "0.68", ",", "0.01"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Slope MLE from Simulation\>\"", ",", " ", "\"\<\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontSize", "\[Rule]", "16"}], ",", " ", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varMLE", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "samplenum"}], ")"}], "*", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MLEsim", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "MLE"}], ")"}], "^", "2"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "samplenum"}], "}"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"stdevMLE", "=", 
    RowBox[{"Sqrt", "[", "varMLE", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.696792013986655*^9, 3.696792084426713*^9}, {
  3.696792151567356*^9, 3.696792198608425*^9}, {3.69679223297505*^9, 
  3.696792311459282*^9}, {3.696792347347474*^9, 3.696792359751788*^9}, {
  3.696802615824795*^9, 3.696802764285775*^9}, {3.696802809609568*^9, 
  3.696802848465136*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.476], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.476], Thickness[Small]}], RectangleBox[{0.39, 0}, {0.4, 1},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.41000000000000003`, 2},
      RoundingRadius->0], RectangleBox[{0.41000000000000003`, 0}, {0.42, 1},
      RoundingRadius->0], RectangleBox[{0.42, 0}, {0.43, 2},
      RoundingRadius->0], RectangleBox[{0.43, 0}, {0.44, 10},
      RoundingRadius->0], RectangleBox[{0.44, 0}, {0.45, 8},
      RoundingRadius->0], RectangleBox[{0.45, 0}, {0.46, 22},
      RoundingRadius->0], RectangleBox[{0.46, 0}, {0.47, 27},
      RoundingRadius->0], RectangleBox[{0.47, 0}, {0.48, 38},
      RoundingRadius->0], RectangleBox[{0.48, 0}, {0.49, 46},
      RoundingRadius->0], RectangleBox[{0.49, 0}, {0.5, 70},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {0.51, 66},
      RoundingRadius->0], RectangleBox[{0.51, 0}, {0.52, 86},
      RoundingRadius->0], RectangleBox[{0.52, 0}, {0.53, 82},
      RoundingRadius->0], RectangleBox[{0.53, 0}, {0.54, 95},
      RoundingRadius->0], RectangleBox[{0.54, 0}, {0.55, 113},
      RoundingRadius->0], RectangleBox[{0.55, 0}, {0.56, 79},
      RoundingRadius->0], RectangleBox[{0.56, 0}, {0.5700000000000001, 83},
      RoundingRadius->0], 
     RectangleBox[{0.5700000000000001, 0}, {0.5800000000000001, 49},
      RoundingRadius->0], RectangleBox[{0.5800000000000001, 0}, {0.59, 50},
      RoundingRadius->0], RectangleBox[{0.59, 0}, {0.6, 26},
      RoundingRadius->0], RectangleBox[{0.6, 0}, {0.61, 13},
      RoundingRadius->0], RectangleBox[{0.61, 0}, {0.62, 10},
      RoundingRadius->0], RectangleBox[{0.62, 0}, {0.63, 8},
      RoundingRadius->0], RectangleBox[{0.63, 0}, {0.64, 8},
      RoundingRadius->0], RectangleBox[{0.64, 0}, {0.65, 4},
      RoundingRadius->0], RectangleBox[{0.65, 0}, {0.66, 1},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.374, 0},
  BaseStyle->{FontSize -> 16, FontFamily -> "Helvetica"},
  Frame->True,
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], None}, {
     FormBox["\"Slope MLE from Simulation\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->Bold,
  PlotRange->{{0.38, 0.6799999999999999}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.696803992323016*^9, 3.696804082926*^9, 
  3.69680465457024*^9, 3.69721975869305*^9, 3.6973298659217033`*^9}],

Cell[BoxData["0.04148427716551871`"], "Output",
 CellChangeTimes->{3.696803992323016*^9, 3.696804082926*^9, 
  3.69680465457024*^9, 3.69721975869305*^9, 3.697329865929706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Determine", " ", "Goodness"}], "-", "of", "-", "fit"}], " ", 
    "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"fraction", " ", "of", " ", "CHIsim", " ", "that", " ", "are"}],
       " ", "<"}], "/=", " ", "minCHI"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"CHIsim", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "8", ",", "0.2"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Min Chi^2 from Simulation\>\"", ",", " ", "\"\<\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontSize", "\[Rule]", "16"}], ",", " ", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"pLR", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"CHIsim", ",", 
        RowBox[{"chi_", "/;", " ", 
         RowBox[{"chi", "<", "LRminCHI"}]}]}], "]"}], "/", "samplenum"}], "//",
      "N"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.6968035220130167`*^9, {3.6968039025356817`*^9, 3.696803965567337*^9}, {
   3.696804074337249*^9, 3.696804074672658*^9}, {3.696804135127859*^9, 
   3.696804145006219*^9}, {3.696804187207876*^9, 3.696804212490498*^9}, {
   3.696804350397633*^9, 3.6968044230955563`*^9}, {3.696804473485921*^9, 
   3.69680447529095*^9}, {3.696804539217684*^9, 3.6968045403712807`*^9}, {
   3.696804688265112*^9, 3.6968046913227654`*^9}, {3.696807633274994*^9, 
   3.6968076342298594`*^9}, {3.696807692130227*^9, 3.696807693126399*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.40599999999999997`], Thickness[Small]}], 
     RectangleBox[{0.2, 0}, {0.4, 7},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6000000000000001, 9},
      RoundingRadius->0], RectangleBox[{0.6000000000000001, 0}, {0.8, 26},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 55},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.2000000000000002`, 65},
      RoundingRadius->0], 
     RectangleBox[{1.2000000000000002`, 0}, {1.4000000000000001`, 67},
      RoundingRadius->0], RectangleBox[{1.4000000000000001`, 0}, {1.6, 80},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 99},
      RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 85},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 76},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4000000000000004`, 85},
      RoundingRadius->0], RectangleBox[{2.4000000000000004`, 0}, {2.6, 68},
      RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8000000000000003`, 50},
      RoundingRadius->0], RectangleBox[{2.8000000000000003`, 0}, {3., 37},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.2, 38},
      RoundingRadius->0], RectangleBox[{3.2, 0}, {3.4000000000000004`, 29},
      RoundingRadius->0], RectangleBox[{3.4000000000000004`, 0}, {3.6, 21},
      RoundingRadius->0], RectangleBox[{3.6, 0}, {3.8000000000000003`, 15},
      RoundingRadius->0], RectangleBox[{3.8000000000000003`, 0}, {4., 19},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.2, 16},
      RoundingRadius->0], RectangleBox[{4.2, 0}, {4.4, 8},
      RoundingRadius->0], RectangleBox[{4.4, 0}, {4.6000000000000005`, 3},
      RoundingRadius->0], 
     RectangleBox[{4.6000000000000005`, 0}, {4.800000000000001, 9},
      RoundingRadius->0], RectangleBox[{4.800000000000001, 0}, {5., 11},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.2, 5},
      RoundingRadius->0], RectangleBox[{5.2, 0}, {5.4, 5},
      RoundingRadius->0], RectangleBox[{5.4, 0}, {5.6000000000000005`, 3},
      RoundingRadius->0], 
     RectangleBox[{5.6000000000000005`, 0}, {5.800000000000001, 2},
      RoundingRadius->0], RectangleBox[{5.800000000000001, 0}, {6., 1},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.2, 3},
      RoundingRadius->0], RectangleBox[{6.2, 0}, {6.4, 2},
      RoundingRadius->0], RectangleBox[{6.4, 0}, {6.6000000000000005`, 1},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.16, 0},
  BaseStyle->{FontSize -> 16, FontFamily -> "Helvetica"},
  Frame->True,
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], None}, {
     FormBox["\"Min Chi^2 from Simulation\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->Bold,
  PlotRange->{{0., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.696803996947845*^9, 3.696804076064927*^9, {3.696804136743338*^9, 
   3.696804146113288*^9}, 3.696804425993629*^9, 3.696804543676646*^9, 
   3.696804657964438*^9, 3.696804695152545*^9, 3.6968076418393183`*^9, 
   3.696807712402808*^9, 3.697219762421026*^9, 3.6973298747745867`*^9}],

Cell[BoxData["0.796`"], "Output",
 CellChangeTimes->{
  3.696803996947845*^9, 3.696804076064927*^9, {3.696804136743338*^9, 
   3.696804146113288*^9}, 3.696804425993629*^9, 3.696804543676646*^9, 
   3.696804657964438*^9, 3.696804695152545*^9, 3.6968076418393183`*^9, 
   3.696807712402808*^9, 3.697219762421026*^9, 3.697329874789628*^9}]
}, Open  ]],

Cell["Plot of LR Fit", "Text",
 CellChangeTimes->{{3.6967908577849894`*^9, 3.6967908720161047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LRfitplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fitLR", "[", 
      RowBox[{"x", ",", "MLE"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "8.5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", "LRfitplot"}], "]"}]}], "Input",
 CellChangeTimes->{3.696790888593877*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      StyleBox[{
        PointBox[{{0.031, 0.}, {0.15, 0.045}, {0.312, 0.179}, {0.507, 
         0.11900000000000001`}, {0.626, 0.28300000000000003`}, {0.864, 
         0.536}, {1.117, 0.805}, {1.369, 0.64}, {1.607, 1.043}, {1.86, 
         1.117}}], {{
          LineBox[{{0.031, 0.036000000000000004`}, {
           0.031, -0.036000000000000004`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.031, 0.036000000000000004`}], 
            Offset[{-1.5, 0}, {0.031, 0.036000000000000004`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.031, -0.036000000000000004`}], 
            Offset[{-1.5, 0}, {0.031, -0.036000000000000004`}]}]}, {
          LineBox[{{0.15, 0.105}, {0.15, -0.015}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.15, 0.105}], 
            Offset[{-1.5, 0}, {0.15, 0.105}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.15, -0.015}], 
            Offset[{-1.5, 0}, {0.15, -0.015}]}]}, {
          LineBox[{{0.312, 0.255}, {0.312, 0.103}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.312, 0.255}], 
            Offset[{-1.5, 0}, {0.312, 0.255}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.312, 0.103}], 
            Offset[{-1.5, 0}, {0.312, 0.103}]}]}, {
          LineBox[{{0.507, 0.267}, {0.507, -0.028999999999999984`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.507, 0.267}], 
            Offset[{-1.5, 0}, {0.507, 0.267}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.507, -0.028999999999999984`}], 
            Offset[{-1.5, 0}, {0.507, -0.028999999999999984`}]}]}, {
          LineBox[{{0.626, 0.41700000000000004`}, {0.626, 
           0.14900000000000002`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.626, 0.41700000000000004`}], 
            Offset[{-1.5, 0}, {0.626, 0.41700000000000004`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.626, 0.14900000000000002`}], 
            Offset[{-1.5, 0}, {0.626, 0.14900000000000002`}]}]}, {
          LineBox[{{0.864, 0.714}, {0.864, 0.35800000000000004`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.864, 0.714}], 
            Offset[{-1.5, 0}, {0.864, 0.714}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.864, 0.35800000000000004`}], 
            Offset[{-1.5, 0}, {0.864, 0.35800000000000004`}]}]}, {
          LineBox[{{1.117, 1.065}, {1.117, 0.545}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.117, 1.065}], 
            Offset[{-1.5, 0}, {1.117, 1.065}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.117, 0.545}], 
            Offset[{-1.5, 0}, {1.117, 0.545}]}]}, {
          LineBox[{{1.369, 0.924}, {1.369, 0.356}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.369, 0.924}], 
            Offset[{-1.5, 0}, {1.369, 0.924}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.369, 0.356}], 
            Offset[{-1.5, 0}, {1.369, 0.356}]}]}, {
          LineBox[{{1.607, 1.4829999999999999`}, {1.607, 0.603}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.607, 1.4829999999999999`}], 
            Offset[{-1.5, 0}, {1.607, 1.4829999999999999`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.607, 0.603}], 
            Offset[{-1.5, 0}, {1.607, 0.603}]}]}, {
          LineBox[{{1.86, 1.669}, {1.86, 0.565}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.86, 1.669}], 
            Offset[{-1.5, 0}, {1.86, 1.669}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.86, 0.565}], 
            Offset[{-1.5, 0}, {1.86, 0.565}]}]}}},
       FontFamily->"Helvetica"]}, {}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVxX8403kcAPCN+bE1P77foSk/vuLmedJSNx5K+bw7T+WYfjihbSpKPBWt
kFbrqjtljw5pdCIJ5XKuyJmwjvBI3YmNyo9aCFmWHylpynZ3f7yel1PU4eBo
AxKJFPSf/y/UGA8I/FN9bRVRBdxHx327bcXhp/jRqLci//RteShq5Te3beEn
ITzJYOqkfD9qEEef9uKfQxU9MtZe+THkY+b1wo2fg3SSzOZQ+XkkeuZIZfFv
opuR4ovb5JdR7horwpkvQ9onR5OD5KXo1sGMcid+K3KmTI4HymvQZvaucosN
z1GeLP0namUbGtB1qawlg8hLNq25m6tEvwSmMc88HUVPpCENJ9f1oJR3AZVD
Ug2SniprvMFTIf3XuzOS49OIlJhxyUUyhIbZLfKrez4gxZ0HAtb1EaS3dLjm
4PMJVWs6T9SUjaGI5d90po58RhOxkwGU0+NocKLyzqG2L6jh4Lmqs1kT6MaY
+qW3SIeO9Fjvf+U1jRTfe16qyyCB2Ykeu5bC92go0Ts9e4EMx3bvKESsD4gh
z3If/sEQqKP983mXPqLwUHbZ1EMKxN62W5Zh/wnV/R3nzuEYg/ITN8G/aA6t
5VEixs+bwL7BlIIhmhZ1+Koid8+ZQgtdJMWl8+hnX7q5/1YacPsSo5aRv6JA
6amsyZZFUKResfA4fQG5N0md2lebAVnU3eTN0CMPGmmnfao5tD594O6HSMC9
dSdmhdYChObHRjwpZGip7MsIK7OE1cwKI+Z9MkyKVgqrgzFIjhqQRwgNoDjO
Zb2QhsOyjomwKY4hjMW3qkZlOIxQz+wRjhuCLM/kQP1hBtBipresr6QAxrkq
Xs6yghpKeFfcUSNY6H0RFaKwguSjfs3prsaQUHbfQyWxhmtks1ytxhhEqf79
jp420L+H1x9SYgJmXSxjncoG8kmFdxlhpuC2udTeJ2cxNDc1xTssoULfY4Xp
t8AEXXBsLlNBBSz56kCqlglFRhO/7cqhQd9qRtqvpbYQLpl1zg5aBO47X9Z/
t20J5ATOerAN6GBevqmHa7oUvFZ1u+EP6fAjTdBmWb0UpkY8Mt+IzSA5Gy/h
xNsBXZ7Ya+xnDrq0pUYzLvZQoSyvSTOyAJvMzrUHOu0hpnY/WVdvAff+chFs
kDiA36A+9xWyBLXWZXuXhyMIuBljsnxLuFWc3K5TOUJteC6pcdYSPtfLbFsD
CGhLyqLHh2EQ7WZ0L+Y6AUMn2juyqzDgdWDMN0UEOLyJULpVY7DtiINoXwkB
gu1T3c0yDNbd8/KJLCWg1xXvm67FAPc70Mj7g4COp2HD3EYMGnidbUG1BMhX
Ds9R2jGwSbvSy1EQIH2tJZJGMaCzS9dUKQlQBl1wpo9hQFZU5a3qJsCizo5V
osbgnXW7gP2cgLRM5KbUYNBcpBtkvSTgzLpznuwZDA7X7X1rqyYg7rJlwKgO
g30CYUDuWwJ+JxdzxSQceHpxuY2GAPUhzlaGAQ6bNl6OY0wSEO0XGrLBCAc7
5aP39I8E8KfzdxUswgFPfBZ8YZaAK3x2pIcZDiaLX/9JnSPg+cOGvf+Y4zAj
+JJkPE/A9oKhWC2Gg1pv0pPyhYBM04SDFxk4qIqtvA0XCGhPoMS7WuPQtdHp
ylkdAdSBHGGDDQ6P1Ox5vZ6AzQGuCTuYOPwL41gkgQ==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 16, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Excess Relative Risk of Solid Cancer\"", TraditionalForm], 
     None}, {
     FormBox["\"Radiation Dose (Sv)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  LabelStyle->Bold,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.}, {-0.1, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.69680473620979*^9, 3.697219766449389*^9, 
  3.69732988132642*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Delayed Effects Fit",
 FontSize->18,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.696696365547844*^9, 3.696696436909037*^9}, {
  3.6966969520378304`*^9, 3.696696952925071*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fitDE", "[", 
    RowBox[{"x_", ",", "lambda1_", ",", "lambda2_"}], "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"lambda1", "*", "x"}], "-", "lambda2"}], ",", 
        RowBox[{"x", "\[GreaterEqual]", 
         RowBox[{"lambda2", "/", "lambda1"}]}]}], "}"}], "}"}], ",", "0"}], 
    "]"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitline", "[", 
   RowBox[{"x_", ",", "lambda1_", ",", "lambda2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"lambda1", "*", "x"}], "-", "lambda2"}]}]}], "Input",
 CellChangeTimes->{{3.6966974791843233`*^9, 3.696697532693857*^9}, {
  3.6966976255093203`*^9, 3.6966976838269033`*^9}, {3.696697722141056*^9, 
  3.696697733467654*^9}, {3.6968058699806013`*^9, 3.696805906692923*^9}, {
  3.696806205969635*^9, 3.6968062589147787`*^9}, {3.696806361136263*^9, 
  3.696806383265711*^9}, {3.696806490886403*^9, 3.6968064948315973`*^9}, {
  3.696806639896183*^9, 3.696806643532072*^9}, {3.697199946871479*^9, 
  3.697200022234817*^9}, {3.697216225384213*^9, 3.697216260231325*^9}, {
  3.697216519469075*^9, 3.697216537744192*^9}}],

Cell["Maximum Likelihood Estimate", "Text",
 CellChangeTimes->{{3.696696779441166*^9, 3.6966967882151413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"datapts", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chisqDE", "[", 
   RowBox[{"lambda1_Real", ",", "lambda2_Real"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "4"}], "*", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"fitDE", "[", 
          RowBox[{
           RowBox[{"datapts", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "lambda1", ",", 
           "lambda2"}], "]"}]}], ")"}], "^", "2"}], "/", 
      RowBox[{
       RowBox[{"stdev", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"FindMinimum", "[", 
    RowBox[{
     RowBox[{"chisqDE", "[", 
      RowBox[{"lambda1", ",", "lambda2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"lambda1", ",", "lambda2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MLE1", "=", 
  RowBox[{"lambda1", "/.", 
   RowBox[{"fit", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"MLE2", "=", 
  RowBox[{"lambda2", "/.", 
   RowBox[{"fit", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"DEminCHI", "=", 
  RowBox[{"fit", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.696701417785224*^9, 3.696701428397189*^9}, {
   3.6967037788293657`*^9, 3.696703797134967*^9}, 3.696785753405308*^9, {
   3.6967857984359903`*^9, 3.6967858033383827`*^9}, {3.696790258732483*^9, 
   3.6967903000927677`*^9}, {3.6967903686416597`*^9, 3.696790400651288*^9}, {
   3.696790772063375*^9, 3.696790842852517*^9}, {3.696790923355329*^9, 
   3.696790996768437*^9}, {3.6967918362229*^9, 3.696791865362093*^9}, {
   3.696804877378484*^9, 3.696804897273394*^9}, {3.696804974342722*^9, 
   3.6968050260451097`*^9}, {3.6968050833343887`*^9, 3.696805128984109*^9}, {
   3.69680520780338*^9, 3.69680522947655*^9}, {3.696805543629424*^9, 
   3.696805639967515*^9}, {3.696805734432335*^9, 3.696805740068639*^9}, {
   3.696806338454803*^9, 3.6968063483719397`*^9}, {3.696806521403503*^9, 
   3.696806564136467*^9}, {3.6968077287107267`*^9, 3.69680772943841*^9}, {
   3.696809873693128*^9, 3.6968099284724073`*^9}, {3.697199107695682*^9, 
   3.6971991102306633`*^9}, {3.6972000304860783`*^9, 3.697200067510661*^9}, {
   3.697216280913464*^9, 3.697216391670336*^9}, {3.697216461003212*^9, 
   3.697216504005089*^9}, {3.697216549618195*^9, 3.697216607724347*^9}, {
   3.697216647490225*^9, 3.69721683065623*^9}, {3.69721688018895*^9, 
   3.6972169509144983`*^9}, {3.697217327831843*^9, 3.69721733811442*^9}, {
   3.697217376011454*^9, 3.69721738845532*^9}, {3.697219424660441*^9, 
   3.697219426089546*^9}, {3.6972210734724407`*^9, 3.697221102251857*^9}, 
   3.697221216687668*^9, {3.697307860616399*^9, 3.697307879483754*^9}, {
   3.6973079270503263`*^9, 3.697307927593665*^9}, {3.697308000425647*^9, 
   3.6973080474501*^9}, {3.69732875080544*^9, 3.69732875495207*^9}, {
   3.697328868867591*^9, 3.69732887252952*^9}, {3.697329079925639*^9, 
   3.697329176475534*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.697328784916933*^9, 3.697328873828011*^9, 3.697328974896288*^9, {
   3.697329092905479*^9, 3.6973291176758757`*^9}, {3.6973291490577393`*^9, 
   3.697329177078318*^9}, 3.697446219776678*^9}],

Cell[BoxData["0.6058802821093952`"], "Output",
 CellChangeTimes->{
  3.6972169882650223`*^9, 3.69721910348987*^9, 3.6972194284586287`*^9, 
   3.6972211054351463`*^9, 3.697221227500389*^9, {3.697307904400681*^9, 
   3.697307928142581*^9}, 3.6973080556282053`*^9, 3.697328785145265*^9, 
   3.6973288738294077`*^9, 3.697328974897891*^9, {3.6973290929066887`*^9, 
   3.6973291176776876`*^9}, {3.697329149058919*^9, 3.697329177079484*^9}, 
   3.697446219788069*^9}],

Cell[BoxData["0.045470334475072795`"], "Output",
 CellChangeTimes->{
  3.6972169882650223`*^9, 3.69721910348987*^9, 3.6972194284586287`*^9, 
   3.6972211054351463`*^9, 3.697221227500389*^9, {3.697307904400681*^9, 
   3.697307928142581*^9}, 3.6973080556282053`*^9, 3.697328785145265*^9, 
   3.6973288738294077`*^9, 3.697328974897891*^9, {3.6973290929066887`*^9, 
   3.6973291176776876`*^9}, {3.697329149058919*^9, 3.697329177079484*^9}, 
   3.6974462197963343`*^9}],

Cell[BoxData["2.17276396605144`"], "Output",
 CellChangeTimes->{
  3.6972169882650223`*^9, 3.69721910348987*^9, 3.6972194284586287`*^9, 
   3.6972211054351463`*^9, 3.697221227500389*^9, {3.697307904400681*^9, 
   3.697307928142581*^9}, 3.6973080556282053`*^9, 3.697328785145265*^9, 
   3.6973288738294077`*^9, 3.697328974897891*^9, {3.6973290929066887`*^9, 
   3.6973291176776876`*^9}, {3.697329149058919*^9, 3.697329177079484*^9}, 
   3.697446219804085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"chisqDE", "[", 
    RowBox[{"lambda1", ",", "lambda2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"lambda1", ",", "0.4", ",", "0.95"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"lambda2", ",", "0", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.697220647566545*^9, 3.697220783297577*^9}, {
  3.697221261927335*^9, 3.697221276239443*^9}, {3.697308140135626*^9, 
  3.697308170061469*^9}, {3.697308259502067*^9, 3.6973082928321447`*^9}, {
  3.697308327534935*^9, 3.697308330695418*^9}, {3.697308402853463*^9, 
  3.697308436359611*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
hJejJM6DUNcN01DSdCmk8+NWUl/db553qymW8jekfi64VnwodzVdL64i+Z2X
jH6C3G4a77mQ9QL/ygFRFU7qz1+T+GEjOWcA998SvpVw9CdEn+GiBJ0UXRpv
gD+MnqpQIxZI7Y6T2ONSYo+gWyepwyhH1IZW3+Wn+4WI3e3f3du92IIHOeSV
jOJmzcTdXMityXjj5P+Xd8B3PELyTZnm40dc/9B1n1Rid6pz5K/Zq3Ejx9+3
BtR4Z22j8Xk6scd2z+/7PD7Q5yuTPOirGU9ADgsnreeT5yRN+p2sL3kO9zvb
5ulRdF90A/Grm8i9z8Dxd52T+CjhSyfxK2Qe3DIpf3lA1gWmS/QfnJ5P60IX
iT1qcZ/oX3RcEu26kcQtNZP2Gc4n691lz3/VVlTS/ZkKJP6/x+Gb/VSHcvDz
09YaPbkgK4ecldRhetdr57tVyuI4+Uvy1oJTi1Jmt1H+gcyDH39zK1tKUw7x
RijLlJjcRDoOX5Jx20XiYbCXGyQOmS+5Iy+sQRH5H7d/9Raxinc3UrYqIMd7
8Xbv/NtoQPkxkkevqj6VdbyPxrcDZL3sbFjdupzTdH8LzFMnyDkDmP9OOk8A
OOSVouQ8AdzXTfYVlOxQFr2qQn/vuZrkU67C1yWkfyrRfdFQF1LqcZtvRzmT
zLPBZJ6F80VhXWOveIrr1V56fyvwuRKO+5pM6fmZwJkNT250/ObHcxWAJ8QG
7s15IIbnXAE/xfWGYTOd3qcGfH8LzzFmuQqecwh8p2cMe1GLJp5PBdyQ/dBB
zWZ9PDcJ+GLvIL5Mr6l4fiDwL+/dXIud6H1/cN6LjLiAgVGjOOoAfHNuQbbo
TznsL3BObY7PS0bo/cvAZ4aUO87YJ4T9Bb5MI8T/9GsJ7C/wW1UW9mwWCthf
PH/mgvhFyyw17C9wvgw15f5pOthf4AlaZXeuJRlif4Fb741MNhgxwXOAgQ8n
cz5Sl6L38YmR/Tk77161fflSCnUAfmmB/6MPNUp47hzw8eSwtzqXRFAH4Loq
gWIcJ+g5usA37nqvWLmFnhcKfH2osv2fL9KoA3AWzsiZ82VVUAfgSdIl/gs0
NVEH4KI/ViWyyeqjDvg+VUl95qP0/nrgfOUl5q8b6T2bkEfwOjYtvHRQDnXA
+7AG3n/wz1FFHYAXzr42XB4gjudGAje6Ke9T4CCAOgCvPqE3peohPR8Y+Pn5
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
YLNdEOM94Dbp25Jlnwj9V3xbSuJbsAuMZ5acNZ/KJvpf8ckZiE80GLNjrlG7
c2tSSu3zpPYLvLnv50PdSAF8zmS/CveVwHgYW/96VsQ9cWbc5vVd+rZ0Pl14
SLL0aTy99xm43lJFwfFYVqaJb6tCXQGd353uVi90vcyLeQTqfLu+XXcZL+a/
MB4i+BmvxRy50B8Cjzl+i3e8mx3zSuC3VO82JPHTe7KAVx/vOzP9P+IE4Gbn
3u6rOcyB9UMYV+47GnILOdhQT3jP1VJmV+Z7Ub8HvLEhnGlRT+9HBr5UbDDp
6V56HyLYbw+ZB6tJe6wzk3uKKydxL8LNib3Dd3H+viJpm+hEfKX4z+8B17uy
an5FnhjzN7l/E+aXQWblhtX+YnjvMOhQ1D9tyfAuIbRr+I6K21abK0YIYl4A
z7li/4hTRYAX4zrgIjc2Jwp9pfcIw3Ncqvbax0/nZMaTfBN43Yp79bNO0Hs5
gY+YsJ3JvMmOeQHwnvOt98r92NA/ALdN3h953Zod7RS+Y7O9dXNJvwB+R+A3
x4QtboUJ43wKfvtyxL3Ia1voejF8xw06ennM+/R+W+CZGTVbXdfx4nwEPCKm
eqmcnBTOR8AV5VMOu0/MU1CXg/EwQu6rNZ/E/8I9tv/HePAhdTnw/6wXZW2U
c2Sw7gG8oD23pt1KjslO6jPwnPHfDcadw8rMS6QeBeNncL+Zzjx1ZaYhif9h
nDCOVorPk5DGOj/wFFXvnt6bohjnwHcJkoqOdpzFg/EJ6J/LW+t1MIYL/QNw
qaVBU0Yz6f1r/6+uMw/rMWvjuPZGSX7Vr72IUtKixSCmJ1IzdoVsk7XF0Fh6
NYbGPmYsIyKULFNM2cprhNJiojSk1ESoX2TSMGJorIleLvf3Pu88c/n3cz3X
c85znvvc59xnub8vZXqsH+KYV4CP2d49uNBB6LSCu0KnVcY9iKM+sIdV3+6/
l+Wqxf4KvLV0573iH4R+K88HPFWj81IM2f+D99mSFpr6Uvh/cKeTe/oaGBvy
++GfXSesXTfEXpxzA1+hyu75ZKU+2zn+76BRNVe0jxmynYP7W6m/qgh/O1+i
+oD/dvmehraliCPAJx3cdFUv0ViKoHk1+MyPbcyeS0J3FfYz0c0ma9XIt3EZ
nXsET6R7JWUyvpv4Dpr/w9603GtW2CxWSGW0vgGe20/r9agEBc+34WeSncfO
0X+tz/Ed/mN80BLdsb8KPTjY1RO1yb02GqjzvAv98WJExMG75kLXDONp0l/x
s3/UEbqi4NAV/RCHHaLdChvzC5evEfNVPJ+TG314XYDQ/QQvJN1PfBe+V2Np
dszESE32V+hfhftqfujfUZv3m/Ce2Uu+XvKLsdDHBI8ifUw5n0cc/gT21uQX
8EtSF3GOiO3QOjbm0GZzKWGhkfn6TDGOBESvrs2IeBtP0bjM5xINtw0t36rJ
6/ngFt8lfDQwQYPXA/G/VHTPAuv26C/uqta90T20eH0SPLXF9af+vkKnEvZw
ge5fyHkxccQXeE9y9+znL79XSKWy/X112t/HOj/+r37gF+6tvZSSN62Hw86L
SKfSU8YLiJfTvgDs/P6sgTYWIeZSIvltcKOW5vA9DmYcv6N9Hp3fdq1JqcXz
GfC2sFUPVhzW4vEC9Ww6Nyhv9mihRwl+PacxwaXNkP0q7OHGgOKhS2+K8ZHj
ynwnKzNrPZ4H8nk864dVDzw12G7B3xREHwoIEvqSsJ/8QQcnR6cqmaOdW2m8
K5O1vw61P9bV0T5PVp9Z53XcSvKmfSjwtKb6vqWvLXl9A/V5lmL5SuuF0EGG
PawlvUg5h44k7A3t0Lu1INY5tz3XH9wqKPFYaBehP4v2nKWrfz91kw23D/pL
lmLhZotlQocR/T1X0tDYtlWX2x98wlpffwOL9jxeoB8993ZpTNitz34MvPzO
8pTILR3YL6EdLm9cUFtpZcDxDvjig0nbT/3enscp8Njhik7brhjxujR4O7rX
gHEQ7aY88Pfas35ChxF8M3QYZXwrcdgneODDDtrHm5Ucj6OfPjtUemVSPyWv
I4F/c3CN84F3+bRpHAFvbm3JKZgv9unAh6/fEhmypLPUFvj+f8HewkmHUe3T
f/IomT4j+lGdvqWJara55EVxNHjmWefSWVGmvE8K7pL5yeN4Q1veh+JzLGGq
6rvLOrOdw2+EqO6Fn+xiIyXSvir4KdJt3CnjBTI9x3/ZOa27wj5dQiKnT/LR
Z71F/N8lR20dm8rV+Xth52rtqvJzBou8rxzvk35BKflz8FjSHXCzdLgfElvD
9vzThFTf/9fLA6+k/P8YZ8Ef2ZkmnetnxP4cfCbl+X+1ZFvDbecatv/QOo/F
D+LFOMX76T6j9JYfE/n2wR0p334irQ/wOFUSOc2x0IDnV+CfP/jVv+ETE8kT
9/Fxnp/y7ZfUatdF1dzg/fQUn6uWz0/ZcPwF/l3U8Ox5p5QcZ4F38AyfHfSd
Ie9Dge8uKFh/q07oloJ3ofz2CQO+qn6x7gb/x0tGi2b6j7WT3D5+ovejgYq5
2aLQsqBCS477wKcqKjZYzjfmdRvwTcsvFOyo6yBdov7FPM0mQlNhKSXRuiv4
UMonP233H5dX9bvBdjjf6UDLDF97jk/BU43n7+0V25l1gcGdli2rvexgzutF
4H+80Vj5e4ZCCiuMGh3f7TbziOKkipoqPZ5fgXvvb7w68prQ4QUfQfnbEe/A
P7jtubSiaoYj77eCn3i4eHORQ1deHwO/drJZ1zjOWmqjdTDwuEubswZtUEql
zfZlIa3inHOKzW+OFoM7SYk0noLfD59R7FrZnv0JuH/t+qj6HV0kNboPBd6D
8qtjHoV+akD5zF2p36G/7+yyIjjLyoV1zMHLKT85+hHG67OqZd8P6ePO/Qjc
wPRAc/fSHryeBn7Lau3CyP4dpPNk//CfT62mpz6M6iVNI/sHNxs0sPqLXBe2
f/Dxeeph3U84ShdpPQH8B8qP3Vb9frwDd26Zu+RBnKG0hewffnWk7e3gCTke
kivZP/vhlpKE+pduUgnZP/hdN63Qd/cOepH9g39tvPHgzzccpDeb39+fBT9K
+ajDaFwGP7ZxccFdIyNpKtk//HN5Q1viOmsvqYXsH7xkZ1HBAo9e0layf/Cj
tiP2N452kbaT/YO/WPHpfjN1J7Z/8AVWQ8+W9rWXepE/Bz9M+aKxjwPe79RR
n1/7KKUdFBfz8xnpEyseK6Risn/Mr378xn/I6aUe0lSyf/CShEpT8zg3XgcG
n3cweGHT7z2ki2T/4J/11T/y6JWDtJ3sH7wqdIT5tdKuUhjdA+V1SMrnjDgd
/GyM4tHGN+ZS25338xnweu8rt1VnTaQ2+l/wz7MoTzLO//C9hvLBk1uH6fO6
Df7jssCtn1pVdGL/Bn6H8vHi/Bjabcvz6RNXhiv4ezEO+t+a5p/posn9F7wb
5ZWFvjz6rwvlTZXHiUUUJ6I+fD484H0+0hk0LqMdfqK8oJEU7/C+WMKMnq3b
FVwu39+hfJWY7/G4T/kAMd6h3NuUxy+S4ke8Xz1m6PHRtqbcznje3N7H07bw
7XzjA+uimIdgfO9LeY1QT/yvbpTnB/EO/HlMSsDyo1VGvD+C58dHX3evrzfj
9Q18l9NFbUPprpLL5Xs9lIcE4wXa34/yJKB98P6ddK8f9ob29MN9fPrvaJ9w
um+O9mG/0c7um7Hvzl9Rv4CdOKbVDUov1mZ7Qz0jF81rGVNswd+F+pTtWxD3
MsWCxxF8b079+N/i9gldCbz/ToZW4bwvNPmeLPjkzuG6X08Q97jBqwMjogd2
FnlOwNPpXirndyK++IxJUfN0W74fDa5Wpr13fJPQgwZPUBo13rwidJ/BX2Zn
enX80pXv24IrJz8cHD3Rg+8Lgw+Q5W2GXXmdl6bNDhZ5BsD7k73hu8An0f1T
1J/tM2OsWvwdobMMrhe1Kyh4pr3QGyKePeHuIYfNPbj+4Lb9dmpr93YX+krE
t14ITF6z2JPrDz8WTn4M5YLfbk2MS10jdJ3AB+2KmeUxojuXC65xpePQ78/2
5HLBDSs9koKihb42z1fv27nM/lroJYH3UcU9stzgJPJpEw8Izz69ZZgbP49+
oRV2a2txlgM/D66drvJLNBL1gZ1PnlVZnOUj9GJgz3WLokaklwq9GF7fqxyT
m1Yi9GLAm7QWzNK7aiHyDxM/p/CauzpC6JyC25b+tTbn7TwtUuafu5F/Zl1p
4o3leRUHZoj78uBp20pO9Eq2EbrSxFUX89K9LLty/eFnzobtu+X5SujCgDdf
dI47l2jD9RfnP3UX1K014/qDD6msm5VVLPLYgLePU2vwDBF5gcDDyb+hnuCO
z35Jr6kWurHw58s1OgQMmyn0WcDfBHcaFmwq8lGALx2u3uXiMSW3J7/n76b2
7XaKvKbgSsqzjfqAH//rwRHfd/fZqVyMI0ZBaUsf63Tmcvlez4CJma8+suBy
wctWTYmpGGXC/Z3XAeh+EMrle0wHv7308xdChwV+uyWl0TiwVOiPgHddq52d
N9+M3w9+me7L4Hk+h6Bxu/Lca5HfANyP7oMky+41ZNO9hsuyuDue4m7E6fAn
U05Ue6v/ZMzPg2d1Pa/urGPMfht8OcXXeA/8w9x8x9erTov8UeBtn08Zeaqd
8P/gdvMbk7bbCZ1E8AKKl/F++I3MIotCzy0iXxB41+svqq2NhH4c+J7ee1uc
VSLvK98T/+ik254akdeOz71TvIxy4X/8Vxo6pb+dZ6Jc8IXBnqH//cOMywVf
/ZFH4M3XCu4X4Mm1wct639Tncvle84lH48u6W7Gdg4dRvIz68Dr2AYPsdZ52
XB/w8iDf142Prbg+4L8dahg7eruS68P3nVdYXMuL6sT9BbzlyPWem3REfk7w
WntrrX56Io8f+BJP3+Wra824/uDueZ+tj9cQeTPA51B8je/C/KT9uC+/DJ4t
9NDB9/fN/0/wdKGHDv6q0URvZpvQQ+f4V+eAX90aoYfO54pbxv9g4i/yu4Lr
3gjJe9lb5Afj/T7jjVWH5wp9anCzw+/XG/G94JsWTth/K1/k4QE/c2Dk8Yr+
Qt8cfJhMBw1+VXl04ZCw8UIvDPwSxeN4Hn5PFV/rNOy+Kz8P7qd2Ic9WKXTn
4a/0Vj1cdW+O0KUCH/KzV+7HM4UuFfhAjVGaEQZClwp8PcXd8BvgVYlTqr8r
7Mjlwr/FKa7N/HaU0IHi9dLjBmrjugkdKPDK1uaCIFOhAwVuekLHxsdP6EDx
eWmKu1Ef8AjFhrvzC0R+LXB3Oh+LesKvflUUmzrOT+g3gVtO1nXbXCr0i8Eb
S87kXE8X+sXgMXNNvXdpCv0m8GLzx+2TM4R+Mfg+isdRf/D7pcm5ObrCD3N9
DK3tEzsK3RmO92O6OR7zEd8LvpTO/U6XxYNpFA/ie8EN7ftv2Hle6FWBh7y4
NcbMw4W/l88JD/zbKzRC6DSB99FLsTTtKXSawGtOdvb+a6TQaeL9L4rr0Q7g
i1rrI2zyhL4G+OmbsUd22RlzO4CbP/vq2YtykVcTvJzO70XK4txXFOdqys5H
NdD5qD6yOPepLF895m/Ikw+O/uufl7T99i6Rbxx8MJ0bT5adf95B55/hT1D/
hvoORWUpSn4efhX5mffKzruepvOufWT3CPrRPQK0M95Tbf/iwrbPhH4T/JWK
7mVoys55Is//HNl55mI6z4xy4R+QVx/1hH2O6zqoJf6q0F/je2G0bsm6fjRP
0LlR4Zp/Xo3rg+fv0fkrcJRrTXor8v2Fy7S/AM7xdbLaH8+n6/9rX8CB9gVg
P+A//tn4ZuMQkf+cdXkyXFPPJIn8b7C3T49PdW0MF+0P3kz73ZGy9Y3OtL6h
Kdu/vkP713Nk53gb6Bwv2pnvv1NeXNgV7OFppt1qf4XZB/dxYG+o55+UHwb1
RH1M3J0zjeaIeFmefwPfCzt5HDgmqeiMPj8Prk35B/bK1tle0jpblew8yUk6
T+IlW7dpvf9+3Qblwm6RFxTvQbmPvMenPw2w5P8OO3Fps/zS11OX7RnflSHL
38jn23GvJ/6f6z8+tP6DdkN9LoeahEUONeR5AvrveloXYj0XaodFBorcLZ+J
PIqo58OfNZ4+KRb9F/aZYd21W8MZQ25n8AGUP4r1XsluN+js812jEv0X9Ten
fV60G9tV8aHp+bHmXH/Uc0Ba04lbU0X+N16v3n9sg90ZEdegHbrT/qOXbP/x
K9p//B+YWiQY
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nHccV9Mbx+86916joawyKyWVnU0pFEkqolJUkkgkpLJlZGWFCAnZe69I
NkXZW8jekT1+n3ef8/vjvJ7nnu+555577jnP+DzP+bYYdkTfw7MkSX4JSZKL
flskyeqq+Eb0HtG7VU5Umarfu+j3V6okuVANe4v/SfXni+8l/gfxl+qeldMk
6SA6RfV7qP571Q/V9XfiU9Fv9fuO4ierv1XrJDlK7caqzwtE91T9j2p/tPi2
4l8Tf0bu9p+JP118Z/GLxR+gvr4S/6/qdlM/H4ter376lUmyqeoL8Sur/lDV
HyF+oujGqn9H954mvpP4T8V/q/abiD9e4zkuN/+u6tuq/68TOkqSTL811rjX
F/+Mys/inxa9Qu12UZOz9HumZzQWf5D4o1S/qkqpdk+o/hm60XPWFt9Z9T1F
x+hZ66r+ZV0/quu1xB+ue/dWu5biZ4mewTurbKXyden2R6hNovZPieSq+1Fl
jsYyXu86Vu2aquR67gmqS0VXZp70rEfVfjfRs1V2Ff+12p0lvrv4r8QvFf+S
+H6iU3TPRrq3s+iOKoX4ZqLbq2wgfjv61hheVfuV9PxRKgvENxI9VOVJvrXo
cmrTUn1vIfqfrhuKP1D8EeJbq4+xGvM+qjuU9cYaTM1vIX5v0UNUGqnuh9R8
a9X/qnv/0vXm6ucV0RGq/0L134k/WPxm4tfSHB0ofk3R9nHd8u02qdxmY9Ht
RUfG9twLz9rcOvO8M+db6N6F+v0L3buTxvqm5ubqyt+kBc+J/Gf0UZo/I15P
Fh2n0lX89er32PiOG6ivJrpuqr6/juNfRfWfpx7zZ6JrB/cxWG3XUN1BmdfE
lnreQaIP6vfWKmzcSm0OKZlwrTn9XqruCJVjeGe1GcMcqk2b4PrlxZ+o99hK
v3+g6+N0/Z/4CaIr6foU9fOKrrdRX3NFM/V9ktpvLf5D/T5I8/Crru/V7x1V
WqnfE1T3N99bv3dT3YDS+z2IXzd4/I8hV3S9ufhtK6+TTM+6WHQzXQ9T+/vU
to/6+kb931p5nTdR+4NFt6v8LRqX/kZHx3leSX2cmXl/tiq8Fv7W/fuq3bfi
zxG9UdejxS8nepXKEOSG7rlS/AHi/xE/Xfz+3Cv+JvGHi19e9Hvdv574b9T/
zcgS8SuI3qIyRvyKohM05jNzy4VjxB8p/kiN9wrRwWrzl/q8XPwg8X+KX6L3
bCS6tdrMUv0oXlX0OpWRzJvoDSqHia9FD1W/P4o/UOVnveP3fBfRY/Ws4/X7
OPVzHXOn+nni71b781WW6vqG0nPC+JG5yEbW+f6qv1D0UdHHdM9Jqp+r3z/R
9Zuq/1T0XPW9reo/Rv6If0x8D9F11P5GtXmu9DzvrPpLde95+m078Z+gC1Tf
XW3eEe2f+jvxjc5Rm23UZpHaPKR7Roh/Xf19Kn559p34ybrnc9V3U/s71P5Y
vrPonVyrrK5yldr0FX1T9DrNxRbidxa9S+0mqn1T2quMF9+EudTvS8SPRc6K
/1n0KOSJ7vmJORe9V2MYKv55jSFFKbLORJ5Ahuqex0WvVV8HI89F/1Hd3yrD
df2srq8QbS/6jMrl4tvllpOrqJ9dK8vJoPaniB7Nuld/0/UNH0Euq/3aog+r
nIVs4b3V5gG1f030Ul33V/1v7FHdM4I1qj6fFp2GXBFdTeMfhO4RvUr3DeU7
6rerRYepLBa/l/paCd3BN9TzV1D9uqKvVpZDI3Tv76r7TWVvXTfQ9brit1Sb
S9hXzJmeMU313cTvix5Qn/fHcQ5WuVf8QnSC2t+sNluLfqz2M9CzfFuVj9Tm
H9GhKjNVf7foNSp7qv5y0aP0vBbIY9EOekYz3X+O3vsNZK7aP6Xrm1T2ET9I
dYN0zyTxt4i+rXuCxvim6Au6vkX9vCg6TderiN9Q9GWN6UZkKjKg9NiaqJ9L
9fvxjI39UHoenxJ9RLQ131v1C9n/yEjRV1RuEr+V6NOl5/pZ0Xml1+rLoq+U
3pPrqv8jS+8d9tCRep8HdN9UbBWVjTTm9ZB1vCtyUnRX0bNV2mNrqAzI/D43
qZ9D4nux9vdT/ZGJ9cy+Udf0j+2RF/w+MLZZOVh2vah5OEb3rxm/1x2Zn7u7
ynCN7UmNrYvqW2Tui34+RDaLbifaXmPdX/XtRI9T+5bIl8r1g1W/geiWqdtM
TfwdDxDfQ31uiMzCJhHfRPd1ZI8Hj5Gxrqr79qy8nndSmxVFz1VZP7X8Qn+j
12dij4hvKLoNc6aCiYQe3jrqiDrq9SaJ6VaRPyDYHitEu4ruiP2ktpsUljHT
Rc/Xe20QbPfeo7ruatNcdKf4PVhPV7I/smWmYnK82r9QWIa8FMfEeK4Qv0Vm
W+onlU6Z7YA2heUiNuYOmd8Lm2RWbHNdajnIO7ZCh8U+2csX6llb6r4F6FOV
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
c4ZlSeXYJDje7Qj7zHvj58q5KWBTjwSfcSNfmu+eqc1rhc9SEjdEv0ytvdbx
X3jm0qhf0IPEe/AZzgk+k0iuLz7QtMw46EW5cTLy/ibVxrwq5i23PAPLPDvY
diJnGBnFnF8W7KNN1e99K+fzglEiB7CRWDun1j6fAr4JtvlSYfySs3hHBctb
8mavyb13s9znAneJuuuTynF9zjv/WDlmjE1I/nxv/d6msn2GnYbMBCsAwzij
9jlp7CLsIzBS8LG/9dutueNq7OtfKucbgb8trZxvBOb5d+X8KjC6onZeEbqm
rJ0zuqv4FWrnkLGXl6+dY7eH+H8r50uBN9a1c093F79c7RgVcuCfyvlVYIx5
7dwm9vt/lXO5wBIXV479YEdhg2CLEJPjDBhnwcjDnx2cTwWW/lnl2Ab2WFY7
nwz88PPKsRDsuncqx4M5331L8Pk4coDBvS7JvG/xWTjXCk5F/tPBifPtZ+SO
OyIzf6h8dhF7+KfK8Xjs9pFxvWF3/VY5rwvMGUwZbJnzNb9Wzv3aPNpCS+Me
+aJyHAib8/vKZymxq7+qnDuC3ftX5Rw4sGtwB3Qn+g75hv4dgI6tnRPWvbQ8
Py3qhG8r53xgY39X+Vwl9vnXlfNUsLG/qZz/ge19Y/D6R2Zy1g9//a3K+bfY
ShfG70CuEnE5zlKSbwZ+y576I8ol8MKbM58/71Y4Jy9HfgTbiQODzz+xRzhf
Rg4u2OsehWPWnCVjP3IWDz8df725rjtmts2IwZHjRt75vdE2xkYmTwP/bP/g
fETyQcjtAIeZLv58vm9mH5Nz3/gu5D7OTJzPQV4HPhG4N/myxDI5z0LMl9gv
+aasx//nrpCjT/4KOdLkymBnkJtNzjbxKs6zcLZluWCbgryyrqprFHymprHo
f8H2HflL5ISDsyPryAsln4e8nkFx3pg/zuD0iXKAWDdxNPx2cpU5E0bOLWeL
W4h/JfP/LdwQbf9HC+cO9xdtWBrPIM+K/PBR0R4gTxesmfg4MW7i2sRTHiqc
H4vtjR7EtgVnws7EZia+z5lN3oV3Iq5IfJH8OfJIyffjvwFmlM7vIs+LXD5i
xeg2cviw9fuKPlMZrwa3Bu8FiyTPCN+C2CXvhnz4KfoR4GTsZfY05xfA9JkL
cP0uic+NkZOH3b8ozgFjI+75YHwv3m/bwnmGxPf3yJ0bhh1OTj74OLnDM6Jd
DlbwZZxD5pKYETni5E6T7/Zhal+F3C1ySzhHOyjOJ/kCDTL3w3yRd0PeAOM7
oXTeBPlN5BGR48MZNnzDc0XH1B4DMd8Ng/0Y7gUf4OwX+X/EhphDcrKG1s7X
Iq+Jc7q8E/kX5K5BH49j4PwZWCt5s+Q9koPOfzwQb6JP1iK+yOzYnlxM5orz
gMRvwcbJhyUPc3jiswJgyeQ4kt+ITYW9OhifAqwksY7g7CY+2hmJz3DxXuTT
oR+xy+ZFGcOZQfb8lGjX8j6cmzgi2oo7BecIzc6M2YLzcyabnNLdomzB3sC2
Au/l3Fy/uAc5L4wf9mflc6bkbfDfC6Mr+2jkJOOrMlbOT3PuG/sQ2+X74DPv
nOnjPxfQ6diNoypjEZyX4Qwp/5HSvvB5FHjOCv0d/H8anIvhvBzfjfO8g+M7
YrfjJ45LfLZ9SDB22j7qdHIWOGNBbifyFp+F/AjysMnB5v9G+J8WzoCDN4M/
0xf/yTA6839ufBf8vx+cWUPf8e3S3PlRyMuDa88lWCvz+1FwHjJ6f5dow4NZ
g6GyH8ETyDUi14KcMWzS6xLH5fpG24mcKHByfEPOYb8ZHIvBxiC3p3XmczSf
B+esckaSM4FgMJxNIxf3hsy2Lv5dldn34TzCkCjfwNj51n2j7sAPnlz7mdfH
eQA3Br/cJxg/pk9k9J1xDk9OLK+QSYfUPofL+Vt0Gbm2YG3HRPuUNUG8gPxY
clHISSFflv1DXAwdwtlp8qLeCM7DR1+TQwu+yd5GV3A2knORN0b7B/n2P8zE
vqs=
          "]], Polygon3DBox[CompressedData["
1:eJw1nAn8FtP/xeeZ9askKWlRWoSS7FlDKZWkBUWylBaJFhVJaJEWWyKVbCVk
XytECqWQrbKlokLCzxbZ4n/enft/vVzfe+bOzPM8M3M/9/M550x1ew7sPCCO
ouiYNIr0X3R/EUUP6+9RSRS1Koui5dr4RymKztS2Kdr2j/DBOmCR8Ebh+7T/
Q+o3Vb+l9j9c+G/t31PbDlP/X+1/mPZ/RniH+q2zKPpR4w2ET1F/ufbpof7b
Ghup47/Lo+hrjVfStjPU3642Wv35Ov9gjd+j/e8SbizcQvgPjac6/2Ad87b6
e2j8Ps6n8XEaf1B4nvDJwu2EHxKeL9xS+DTho4UrcgF0fD8d/4e+RwPhn7Xp
d/XP1HecI5yprRH+RW2f2N/5P/19V3iHju0lfJ/OuUo41vahwhWFv9U5N2q8
urZfoM+bqc+brrFGGjtJ+GHhBcKthNsLvyu8n46PhW8Wniv8AtdK+HTh5zNf
2+063/XCHxS+H9yXKcKThS/Q+L/adoTwMuEG+vxjNT5U+Df9raux/2mfX9X/
Wq2S8HvC5+gzftT3/UH7Hyp8lvrt9XnbhI8UPk3997T/fyVfn97qz9G2zupv
U3+szt9CeIrO9632eUXb7tLnT9N4Q537RI1/o3Nu0NhxGjtD+B2Nd9J4quMm
Ct8tPEP4QO3fXHiH9q+g872qbV/nvt7/6vifhFeq31/HlVf/Mu3/uY49Qvtc
J1xNeLtwWvi3jBS+Uud7X/gD4SN13G3CbYTH6vwf8gjw7Or4XYTX69zXafwo
7Xe98J5qW7XtVO0zQf0W2n+qxlYL9+H76/xHa/9DhftrvK7GrhbeR397CdfT
Pu/r7x48o+q/qP4VGr+I+ab+czxPuZ+3B4WH8fyrf7baXOFnhbuqf5r2nxj7
Gaytfk2eB/U3cv/C/LqT+6trtCT1/bid76/x5uqfoDZZ+A7hZuqfonOMFn5A
+B99fi9tmy88Tvgi9RurDed763wNdb5Ltf+zwteqnaz+FzrmPY3N1dhHXH/t
P0Zjs3X84eqfr/aU8CjhQ7XPSdpnhPD+Omamjr1E+PHYz1C7wvHjUuG/NP67
xs/T8Y/x+WpbdHw9bTtQ+34k/JX2bSh8PLFI+HvhA4SPE/5S+DvhusKNhNcI
bxbeX/hY4S+4n8L1hRsLfyz8tXBj4XbCPwj/WPj3X6n+HH2fO/T5jTTeVuPf
adsPGj9Q+FTh77nmwvsKHyT8ifA3zGXhY4Q3MCeEj+U3qv8aMVf9a3T+/dRv
o79T9TwcoL9DNV6mz3tQn3e89hkinPP5uY+/XDgRrqb+e2rNmS867lYd30h/
h8WeU7/ob1+NP6q/rwtHhePd4PA8/aJ9R+ozRulci4Xb6xkepM+oLHyhxu7m
+df+g8L93KRtRwpfFnv+7UJ81/67cW05j/avI9xQY6u1bRNzT8dcF+bLhanj
yQzhX/UZS4Un8pvUP0X9LTyLme/X6MT3Z0zm+z0m8f28KfP1vDHx9R+b+f6N
TXz/b858f29KfD/eSv0sddNnVuFZUjtH43M0/gv3h/ijsdu1rYH6WerYdpmO
6cNvyvx7RiW+f52FH4i9JjA/30j9W2px/9XfX2134Sti35PL1Cro+IE6fr2O
v0S4nPClwmt51oV3FR4gvI61VNejt46/Tef5ooh2Lspb9aevtk1Rf7j2ryV8
VeLn6wrhmsJXJp4P+6udqc+uqO1fqj9Uf6trfFji+zFMuIbwFYnnw5XCewsP
T/z87y58lo7fN/I5Kqh1FL6emKnPL0cMYjysKXV0TGvhMRp/j9ip8VOFJwu/
qnPOzDxfpqn/k/a9O/N8mS78s3At5qjwYOFhen76Zjsf0+hi4U/U6Vh4PSF2
faz+6fp7l3BT7bOOOKhtLWI/s4P1+bnGWxLvhKfr+2XCzbn3wncK35I5Ptyc
eH6XtO0HYqHG26qfaLyZ9j8s8jO5RHig+vPCetKCOavxQ7T9D/XL62974aeI
IdpnsfAA9Z9X/3eNv8ozIPyc8G/Ci4QvFX5WeFvheDtPx3fnO/Osp/4tJwpf
INxd+3QhFxE+SNcnTr12k2ORMxHPb2VftWrqv6zWX+PP6Py/EiuE9xK+XHgj
sZs5IXym8Lk63zPCK1hrhLsJ3yR8rvBf/EbhG4XPFv5D+GDhScJdyT+Emwhv
0DVfqe9STm29+leTj2j8M43X0vhYng/hrcINhCdyT0NsOlD4BuH2wj8KHyA8
Tvg04f+xRpAf6Te+rXPrZ0T7kPNovE2Iv/tpfDzPhPBPwg2FZ2S+Xnfo90zj
+7LGCU8QvlN4tPY/Ufgr7V9f+DrhZsQ21mzhUcInCG9mzRYeI3wSuQfPvPA1
wkcJr+fZK3M+wFpIzG2m/lpdg6X6vnupPaL+RH1+K+0/Xp9/lfb/VNve0NgR
PI/qX0tMDutDHY1PZ/4J3679RwhP0HgH4Z813kh4pPAhwmtZ/4VHCDcR/lR4
b/JDXaO1Ovfeas+pv1Sfca/6m4lp6i9Tu0+4svAb6t+s47vzPOn4Q3X8MOE6
zGXh6sK3CJ9HbsCc4PnLvXZ1Zx4K36rx84V3aPxw4aRw7t5H3380+by+Q7V4
Z3odLWANTJ1LfSncW/u8rvPdo8FNxET1h+r4fdR/l+eZzyeH1Pg6nkHtv1D7
3EZ8FH5c/UHELPVfYP5o/0eEXxRurX078Dzp+Ju1f31tO1/9l3XMHcKzyBn0
G67NHEuu0f53aP/hxFDhVTpfDeEl2v994dN0bF/hzZlzpbP0d7rwEO1fTfh1
7b+X8FXkIGH9qym8SMdPK7n++VnHPKrxl1jv9Xkd+b467/sarxI5h9qk/T+m
XlDbSL6r9nTJNdA76lfLHc/5vM90rot1Tp0m6qfzfSq8SuPztH9ttSvV3yv3
/H8ldjz9IPezsV3bzst9PYcJ/8H1Uf+dzPlzE/JEnfg4bRsvvLfO/7eOP0X4
buGDhFONtxS+U/gA4Vi4eu71ZWns9a1G7vXpzdj5+d6516+3Y6+HT6stF+6s
48/h+RV+R7ir8HnCTwm/KdxJ+GzhJ4WXCXcU7ir8uPAr3B/hzsJPCC8V7iDc
Rfgjfd4i/b4D1O7hXqo9o/5v2mcIuaPajcQWalvy6dzr4YrY6/FgXYeqwieT
R+t89+oevaDj7+d+6JgvhMvHvr/NhZvp+JvUr6P+DmKN8C3C9YT/Ez5M+Brh
qmE9eFDnPYPfo/NcrPM/qr8f6vzfMqe0z6Haf6T6e4b14qDc+QvxmPX0cGKI
8F5hvXmKPFzHb9O2G9RvmnttrqHxIVw/bVsT4lNL9Q8hZmu8Slgv+un77CLc
P/Hz1UTj3YT/jL1eP6ZjVunYk7XtdLgAjfdTPw/5VHvhx4WPEy6nz2vN/OZ5
Es6EWwnPjFy/J8KnCT8mfKzwLsIrhZ8M3/9y9U9Xe0L94zVeXuNf6PvdK7xG
eFfhdhp/kNxEuEz4BGKacF3hf/V9PmJ95Pvru95AvZf7+IM1npd5vswnt9K2
D9WfpWPmqn+0xk/R+GWF12dqob/Uf4B8OnzfNhovUdeWXJNS/+9GXa/+QLXH
GdP+V7F26/hLmKjadoLG+qvdy75cQ/Jtta5wD9S95I/k5NyT2LnJnyXzL2do
n3NL3qdBwMTC7sJnUV9p29PMbeEuwm2oIdQ/teT7VSFxbksN/5j6/VJzJzVL
rs92Sc1dXC58ifqbdU0+JX6pf5G+fzcdc5RwY7X/qT9K28dRy7HmqD9D7XId
X034LvVnqj1Bfk8+oX4v6mThJiXH84e4LupfRC1f5pyb78cz+oT606jHuJZh
fswjfyqZe7i0zPkb8+dibesBB5HuvMRRD+Hr1W8eru8ZajWo6dmH9Zd4rf41
aqNL5kC+4vqo/U080Lb9iamZ+bB3A3+xNvPz8V7gb3alvhCupf0nqv9NZn7p
08CHfS78iPD7gc9Yl/n5+SDwV5l+3xrynxCvrssdq6jFzhT+Uvs/qfGPhE8W
/jYzX/RZYn5ua2Z+aG14XucTD3T8i4Ff+StzfvdNWA+/z7z+rAvP74+Z4+eX
wm2Fr9Xx++n4G+E6WL8zr6efa7w1/FHm+LopMZ/2R+b4/FXgr/4VXin8fYjH
f2aO718H/uracL2nq+2p/vbM8XxzYj5uR+b4/51wJ+G/M+erW8J6+Rr1Wcmc
BPX4yalzqZ01C9yb9j8+dg6/H7l95ni0QcdX1PFfCc8R/kS4AvcnNd9zaGx+
8u3M8XRRiNdcL+LTeua29n8rc/x+JcSX8bpeTfX5u5GgarxD4XwcbqVEvCvM
r8CFFMLLM8fbhWG9WZE5vr8c1osuwg/F5oTgez6GF9D4yhDfeH6Inx+GeHlh
4Xq0U2b+6SX4Co0/qfFjhJ8N9csjifnA87T/LPgD5jH5Ve74RRxrSj0Q6pe5
ifO554QHCT8qfKTw+szr/6oQ39dkXt/eCvF0Q+Z4vzrEa/IO8o87Yq+hAzPn
l4MS52urM8frFWF9WJV5/Vwe8osPM6/Pb4b1YrDu0VX6vp+rzVN/iNoI9Zep
HZX6eVmo/b/V/pW0/5zUY531+a1YA/R7jxR+QP0+Gn+HeyO8q1pdbXuJPFf9
8iXXG1fkzo2W6Hy9tP/ZiZ/vhhr/Qf3huXOt19TvzXjqWL5ZbaH6NdXWR45B
xKIP1EqxOeIP1a/KM6uxA9VuJn6k5rrgJOEoyWuYn01i8+0fZOZHl7KOsF4K
30A+GPKvWqm5ovHkjOHzM2K7Wgv1/0ycaxfCk4UXxq63b9PfE3WuTan5HDiq
/8jdU3NNrUrOgSurkcy3VGuXOl8g/71E563C+kC8i805nav+06H+fThx/cCa
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
k1yTHA1t6v8A+pZKTA==
          "]], Polygon3DBox[CompressedData["
1:eJwt13f8jvUex/H78BtKnHI6JOoYp4yMNOQkFMoqooOEhEdWMrJlZER2VMgq
FCUjeyQ/FLJlZZTQIJU0JEqn5+fc9x/vx+96v67353t9r+v+rl/hVp0bdMqW
SCQ2Ujo9m5lIPJ89kfgSrMw/D/bHRmDfYA9gI7HnsHHYD9hD2IvYQGwsdhZ7
EBuPDcBGYmewGtgobBQ2G0unttg8rC82lP9CrhI2DBuBTcf+xFpgs7Dh2FTs
D6w59jo2DJuC/Y41w2ZgI7FZWBq1wd7Gnsde5S/JNcVewyZgC7FrqCe2GnsB
m8Zflnscm4ktzdDHvyUS3dISiQq0TmYu1gZrwf8pvxxbRXn4vjTQvXx8Jv3C
t6L2WA4+oXaQ6/7YtbQaW+E5nbC2fAatwMbTPG1fRZ2VLZF5EXubz0mdsMXY
OOwt/kp6GnsXW+YZ3bXzTFqy78v53nIDZD7zbuXlBsgVxxrx17heL3tO7iVs
kVwe6iW3xr3/YpPl6riuTY/wfWigzDH8LrmB+CDsRewcVhebgA2Od8F+xOph
L2Fj4xtiV1BHbBE2FJvIX5BrjE3BRmNvYpnUAVuIjcHm8DnoKWwBNgR7hf9V
bSPsVawfNgz7CquCDccmeb+HvWctquS7TOZL0ii543J3y42Rm6x2E1aSJmO7
sQfl9vKlaRp2DKuCreOvo4HYDqwy9j6fjwZg27EZ2jvA30rlqFoOz5db6zov
9ZfbJvcQto8vQ9Oxz7G62H6+LM3AjmN1sJ18cZqIHcJqYtv4ojQOO4g9in3v
umX8tjG29OMB7COZwjTGvf1y92Dv8f+kfthW7H5sC1+IRmP7sOrYB3xBGo7t
ivmhzfN8Q2pEzbxbDbmtrovQWLkDcrvkbvI3Uz9+xnLzY+Qq+x0SMV/xpvyt
tDj1+8bYWKfmYewYX5HmY99jLdU39PcO7A2sFd9A7hu+Fq3F/nC/HnaIv5Pe
xL7GnpRt4m9VbBnWhp8gV01fGunH1dSWr0+fy9xDC+TOpn7Lg3xlqhTz0/uO
l6uqtpj7f1f7JP8sFcVG8rmpNV+RVqXmVm/tbZJ/R3tn+NpUh+pr7w3seKr9
eE4t7A61y1PrQZdYt9WWw5ak5lHM/SzsNmxpaj2INWI9dju2LLVuxFqyAbsO
e4rfaNxfiXXAFmAXXD+tv51oId84M7n2xx5QL8YUX4QKeLfbZXJgRfm0GKfx
jaLPeFZmso/R1zJ8WVoba1V8/1i/5XZgW7Fuas9jT/EdaSNWFdsY7xu/v2ff
hJWg5q7zYXlpJ7+ZVqpZRcf06St1FWio9gqoP4Jf4stFv9VsSUvOiSbYncG0
9wsVjbHEZ+Hr3a8jN5rW8+VppbYW8eM8Y03MIdmt/La05DsuVf8B1oXvmpb8
7fvKvUwZrgtGLX0o8zFVlL+bFqk95+8q6hHrmefsiXZl2qT/f7tIVPH3XtqL
3ZuRnN8xz8ti92E76Ec1P9ET7s2OdTojOS9ifuTnS8nsjm/oumR8U/de9jeP
XFuZAjGn9HM2fx9tiHVOe8uxvXx+tRvU/C8teWC4nm9HzVw3pXm+YXu+k+vc
IoXlitB7WC/qr71PsyX3kdhP9lB52bvit8Su9oybM5O/dS6svNr3+f1Un2+Q
+j7xnbrEuu3+bXEeka8u8yd2EnsUm4u1zkzu/XEGmOnZD7veh/0ud1Tujtiv
4lyDXUUXsNppyfUoF59Prl2sIzKmX6Jdaq37FWtFLekfbuSSm6JmrNoqMV5k
1mUkzwB9+GtoJfZMjHM1e7X3MZ3ku1Nf7DBfJs5g8Y7YszFusbJY3zgbxFjA
VsV3wrLxnakDtgFbT4f5E7F/eO47nlmPNmCfYduxuXwhWoPVir1QTc30ZF+i
T9G/Z7In24o283q3btFHbB9fzHO7yd+ivdHYCawiNhY7inX1jPban0VH+D6x
1mEz+Om0SVulsDFqT6q9R+24+F1j7+bvj/2F6vMXY85gh9QdpO3Yy3FOirEc
e4V7v8V3x3bx5WmO9o6onxrjnL+L5mKH40wYa6++zNTWTdSZnxZjUKYCvSV3
VO4TPEuukkwDeo2fJPehTAmaJLdHbnrMYf4/9Db2KXaz7HP8AX0riQ3CzmJn
tJcV50baou4bbI3rJrK75U7zXWLd4Hep/RfWRW1XrGtksELYGbnCWE0+M9Z5
bXTHTtFq1ycol3uX+Ylya9TeSCPUbpZ/BVvN30AvYFuwnlg//qi6W7HvYp+I
uYC1Do7lxIrFmZU/KHcLNlhtCWwIdggrjQ1NT47J9tg6LIuuNYYKyHXCPop5
HXuLXCGsB7YJux7rgf07xgy2E7sR6xP7kfZ+wJpmT+4tscfMjjHN16DV2Lex
hsb6xzePPsYRW24W9in/QMyb+H5yhfGe/BbPKID1jL0rzsbYduwGrDeWH+uI
fYjljH0JW6y9n7EW8c5YDpki1IvfKlcQ6yW3JM782BMxr7ErZK6np/nNcldh
HeUKYp2xbdmS62Wsm++q/Ql7nD7BMmWK0+DwcqWwIXIz5Y5i99PK2Jux17DD
fDVaHuMKewv7Os4U8c7Yb1gZ7U3mv4/zPDY91ku5r2KNjD5iF7DSMfb57+Rq
Y9OwsrGnYBexx7D5WEO1U/nTtNkYPB/rQ0byfP0zlh17jH9d7oja6rRC7anY
L9OT/3u19LcVHYg1m07JNIgx495FfCF2Ls6WMb9i+8lInpFOpM5McXa62lh7
E/vCdd347eR+VTsH+5KvF+MNO586c32bPXlejXNrHrXzsNOuH4nfU+6S3Hzs
O75xnFWwy9hfUHr+LQ==
          "]], 
         Polygon3DBox[{{1945, 971, 817, 816, 1274, 1809}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jtPU3EYB+CXllJQi/IFavgAGMVEDZGFVcPAWMRLlUGG4mjD5CXQzbDI
RJh0MkwQEooaEcEQ0xgvWMpFmxjjByDMPCcwvHl+78k57/+S010cHyq1RMSU
WkpFJHk0E3GOj3ieE7zASfZzmjc5x2HOc4xvWeYGK/zKGTb4mv+5yEOu8Vlb
RI8Fm+p78h2vqkI64od+mD95i1sc4S/eZp13uM27bPAei2pHvs9dXjPvgbwn
DzrfRX21NeIv9z0bkC/Jv+Un8pT8J7kD3zTZZY/fmOZHHtj7Av/xFet8yVrm
+A4/8TGrfMg3LHCWN/iC1/mcPSwzz5L5OWvX1Fn9B15WX+y5U7/JHD/zDNd5
mms8xVV28D3fqXZ5hdlkLzQ+es1bli0Zfcn7+k3l2HFFnxeyekePp3JFTp38
F0eDzUYW
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1381, 1794, 1902, 2177, 1795, 1619, 1771, 1838, 2166, 1554, 
       1699, 1730, 1731, 1644, 1116, 1756, 1555, 1700, 1732, 1734, 1733, 1645,
        1758, 1759, 1556, 1757, 1978, 2006, 1760, 1557, 1382, 2002, 2007, 
       1872, 1558, 1383, 2008, 1559, 1384, 2009, 1903, 2068, 1385, 2010, 1560,
        1386, 2011, 1561, 1387, 2012, 1562, 1388, 2013, 1563, 1389, 2014, 
       1564, 1390, 1979, 2015, 1565, 1646}], 
      Line3DBox[{1392, 1904, 2069, 1391, 1770, 1905, 2165, 1821, 645, 1773, 
       2188, 612, 1701, 1620, 1672, 326, 571, 417, 2016, 1702, 491, 1774, 
       1991, 2017, 1831, 1566, 1393, 2195, 1873, 1874, 1567, 1394, 2018, 1906,
        2070, 1395, 1907, 2071, 1396, 2019, 1568, 1397, 2020, 1569, 1398, 
       2021, 1570, 1399, 2022, 1571, 1400, 2023, 1572, 1401}], 
      Line3DBox[{1403, 1908, 2072, 1402, 1909, 2073, 1404, 1772, 1910, 2167, 
       1796, 1621, 1775, 1839, 1840, 1703, 1973, 2024, 1673, 1685, 1753, 1686,
        1669, 1752, 2162, 1647, 1674, 1778, 1779, 1777, 2168, 1776, 1832, 
       1573, 1405, 2197, 1875, 1876, 1911, 2196, 1406, 1912, 2074, 1407, 1913,
        2075, 1408, 2025, 1574, 1409, 2026, 1575, 1410, 2027, 1576, 1411, 
       2028, 1577, 1412}], 
      Line3DBox[{1414, 1914, 2076, 1413, 1915, 2077, 1415, 1916, 2078, 1416, 
       492, 572, 1282, 272, 273, 1064, 234, 421, 274, 1065, 631, 235, 500, 
       1221, 499, 2169, 1417, 666, 2198, 1418, 1917, 2079, 1419, 1918, 2080, 
       1420, 2029, 1578, 1421, 2030, 1579, 1422, 2031, 1580, 1423}], 
      Line3DBox[{1425, 1919, 2081, 1424, 1920, 2082, 1426, 1921, 2083, 1427, 
       1922, 2084, 1428, 1999, 2191, 1854, 1853, 1866, 1429, 1859, 1900, 2204,
        1648, 1860, 1649, 1823, 1735, 1761, 1985, 2144, 1736, 1622, 1675, 
       1623, 1430, 2178, 1798, 1624, 1797, 1625, 1841, 2171, 1431, 1878, 1780,
        1877, 1781, 2170, 1432, 1879, 1880, 2199, 1433, 1923, 2085, 1434, 
       1924, 2086, 1435, 2032, 1581, 1436, 2033, 1582, 1437}], 
      Line3DBox[{1439, 1925, 2087, 1438, 1926, 2088, 1440, 1927, 2089, 1441, 
       1928, 2090, 1442, 1929, 2091, 1443, 1996, 2185, 1822, 1868, 1898, 1867,
        1444, 2179, 1799, 1800, 1704, 1738, 1737, 1445, 2152, 1687, 1688, 
       1676, 1626, 2155, 1446, 1802, 1803, 1801, 1845, 1844, 2173, 1447, 1882,
        1883, 1881, 2092, 1993, 1448, 1884, 2093, 2003, 1449, 1930, 2094, 
       1450, 1931, 2095, 1451, 2034, 1583, 1452}], 
      Line3DBox[{106, 775, 107, 776, 108, 777, 109, 778, 110, 779, 111, 780, 
       112, 1300, 602, 113, 1126, 365, 781, 114, 320, 782, 115, 368, 783, 116,
        553, 784, 117, 1363, 676, 118, 785, 119, 786, 120}], 
      Line3DBox[{1454, 1932, 2096, 1453, 1933, 2097, 1455, 1934, 2098, 1456, 
       1935, 2099, 1457, 1936, 2100, 1458, 1937, 2101, 1459, 1992, 2172, 1782,
        1843, 1842, 1460, 2180, 1804, 1805, 1677, 1627, 2156, 1461, 1720, 
       1721, 1678, 2102, 1974, 1462, 1807, 1808, 1806, 1998, 2189, 1846, 1463,
        1886, 1887, 1885, 2103, 1994, 1464, 2004, 2104, 1888, 1465, 1938, 
       2105, 1466, 1939, 2106, 1467}], 
      Line3DBox[{1469, 944, 1468, 2035, 1584, 1470, 2036, 1585, 1471, 2037, 
       1586, 1472, 2038, 1587, 1473, 2039, 1588, 1474, 1980, 2040, 1858, 1869,
        1589, 1670, 2150, 1754, 1755, 1705, 1739, 1784, 1940, 2161, 1783, 
       1740, 1742, 1741, 1650, 1762, 1763, 2163, 1590, 1722, 1743, 1824, 1744,
        1651, 1986, 2147, 1764, 1591, 1706, 1628, 1707, 2174, 1786, 1592, 
       1785, 1995, 2041, 1870, 1593, 1475, 2005, 2042, 1901, 1594, 1476, 2043,
        1595, 1477}], 
      Line3DBox[{1479, 1941, 2107, 1478, 1942, 2108, 1480, 2044, 1596, 1481, 
       2045, 1597, 1482, 2046, 1598, 1483, 2047, 1599, 1484, 2192, 1857, 1600,
        1899, 2203, 1652, 1825, 1826, 1827, 2186, 1653, 1745, 1629, 1679, 
       1709, 1710, 2157, 1708, 1723, 1630, 1654, 2148, 1601, 1746, 1747, 1655,
        1656, 2149, 1602, 1829, 1830, 1981, 2048, 1671, 1834, 1835, 1833, 
       1997, 2049, 1871, 1603, 1485, 2050, 1604, 1486}], 
      Line3DBox[{1488, 1943, 2109, 1487, 1944, 2110, 1489, 966, 1490, 2051, 
       1605, 1491, 2052, 1606, 1492, 2053, 1607, 1493, 2054, 1608, 1494, 2182,
        1809, 1945, 2181, 1810, 1631, 1711, 1748, 1749, 2145, 1989, 1657, 
       1689, 1696, 1632, 1658, 1987, 2146, 1714, 1713, 1633, 1680, 2158, 1716,
        1717, 1715, 1982, 2055, 1861, 1609, 1837, 2187, 1836, 1610, 1495, 
       2056, 1611, 1496}], 
      Line3DBox[{1498, 1946, 2111, 1497, 1947, 2112, 1499, 1948, 2113, 1500, 
       1949, 2114, 1501, 2057, 1612, 1502, 2058, 1613, 1503, 2059, 1614, 1504,
        2060, 1950, 2115, 1505, 1660, 1712, 1661, 2164, 1990, 1765, 1690, 
       1634, 1659, 1635, 2159, 1724, 1506, 1725, 1636, 1681, 1637, 2190, 1847,
        1507, 1863, 2175, 1787, 1862, 1788, 1508, 2200, 1889, 1890, 1509, 
       2061, 1615, 1510}], 
      Line3DBox[{1512, 1951, 2116, 1511, 1952, 2117, 1513, 1953, 2118, 1514, 
       1954, 2119, 1515, 1955, 2120, 1516, 2062, 1616, 1517, 2063, 1617, 1518,
        2064, 1956, 2121, 1519, 1811, 1828, 1812, 2194, 2001, 1520, 1813, 
       1638, 1682, 1639, 2154, 1855, 1697, 1698, 1691, 1856, 1640, 1662, 2122,
        1975, 1726, 1521, 1815, 1976, 2183, 1814, 1641, 1848, 1522, 1892, 
       2176, 1790, 1891, 1791, 1523, 2201, 1893, 1894, 1524}], 
      Line3DBox[{1526, 1957, 2123, 1525, 1958, 2124, 1527, 1959, 2125, 1528, 
       1960, 2126, 1529, 1961, 2127, 1530, 1962, 2128, 1531, 2065, 1618, 1532,
        2066, 1963, 2129, 1533, 1964, 2130, 1534, 1664, 1718, 2131, 1767, 
       1789, 1766, 1535, 1692, 1750, 1693, 1663, 2132, 1977, 1536, 1727, 1728,
        2160, 1683, 1642, 1537, 1817, 1818, 2184, 1816, 1850, 1849, 1538, 
       2202, 1896, 1897, 1895, 1792, 1539}], 
      Line3DBox[{1553, 1793, 1864, 1865, 2193, 2000, 1552, 1851, 1852, 1684, 
       1988, 2151, 1729, 1551, 1643, 1665, 2153, 1695, 1751, 1694, 1550, 1768,
        1769, 2143, 1719, 1820, 1819, 1549, 1984, 2142, 1668, 1548, 2141, 
       1972, 1547, 2140, 1971, 2067, 1546, 2139, 1970, 1545, 2138, 1969, 1544,
        2137, 1968, 1543, 2136, 1967, 1542, 2135, 1966, 1541, 2134, 1965, 
       1540, 1983, 2133, 1666, 1667}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{695, 1259, 1260, 2177, 870, 696, 2069, 880, 718, 2072, 890, 
       729, 2076, 900, 739, 2081, 910, 750, 2087, 921, 762, 2096, 933, 775, 
       944, 787, 2107, 953, 797, 2109, 964, 809, 2111, 974, 822, 2116, 985, 
       835, 2123, 995, 846, 2133, 1086, 1006, 858}], 
      Line3DBox[{698, 1055, 1191, 1056, 2006, 1192, 1193, 1019, 1059, 1020, 
       2016, 1169, 1118, 1157, 1194, 1021, 1119, 1022, 2024, 1094, 1283, 1062,
        1282, 1063, 1323, 2191, 1321, 1322, 754, 2091, 925, 766, 2100, 937, 
       779, 948, 2038, 791, 957, 2046, 801, 968, 2052, 813, 978, 2057, 826, 
       2120, 989, 839, 2127, 999, 850, 2137, 1010, 862}], 
      Line3DBox[{699, 1343, 1344, 2007, 1345, 1346, 1213, 1215, 1214, 2017, 
       1295, 1296, 1060, 1091, 2162, 1061, 1185, 1095, 1101, 1023, 1064, 1024,
        1170, 1120, 1329, 1330, 1066, 2204, 1376, 1067, 1375, 1284, 2185, 
       1265, 1266, 767, 2101, 938, 780, 949, 2039, 792, 958, 2047, 802, 969, 
       2053, 814, 979, 2058, 827, 990, 2062, 840, 2128, 1000, 851, 2138, 1011,
        863}], Line3DBox[{700, 872, 2008, 701, 1347, 2195, 1348, 1349, 1350, 
       1351, 1217, 2168, 1216, 1297, 1298, 1299, 1065, 1324, 1172, 1218, 1171,
        1096, 1102, 1195, 1103, 2144, 1068, 1174, 1285, 1173, 1122, 1268, 
       2179, 1269, 1267, 1026, 1227, 2172, 1225, 1226, 1300, 1070, 1071, 2040,
        1328, 1326, 2192, 1327, 803, 970, 2054, 815, 980, 2059, 828, 991, 
       2063, 841, 1001, 2065, 852, 2139, 1012, 864}], 
      Line3DBox[{702, 873, 2009, 704, 882, 2018, 721, 1352, 2197, 1354, 1355, 
       1356, 1357, 1221, 1220, 1262, 1263, 2178, 1264, 1121, 1025, 1097, 1104,
        2152, 1196, 1105, 1069, 1176, 1286, 1175, 1098, 1271, 2180, 1272, 
       1270, 1029, 1126, 1197, 1198, 1092, 1187, 2150, 1186, 1129, 1073, 1374,
        2203, 1074, 1287, 1273, 2182, 1274, 816, 981, 2060, 829, 992, 2064, 
       842, 1002, 2066, 853, 1013, 2067, 865}], 
      Line3DBox[{706, 875, 2010, 707, 2071, 884, 723, 2074, 894, 733, 1358, 
       2198, 904, 744, 1222, 2170, 915, 756, 1315, 2173, 1316, 1229, 1230, 
       927, 769, 2102, 1030, 1127, 1128, 940, 782, 1032, 1158, 1199, 951, 
       2163, 794, 1159, 1160, 1133, 1134, 2157, 960, 805, 1107, 1109, 1108, 
       1081, 2145, 1181, 1182, 972, 818, 1206, 1208, 1207, 2164, 1082, 1290, 
       1291, 983, 831, 1338, 1339, 2194, 1276, 994, 844, 2130, 1004, 855, 
       2141, 1015, 867}], 
      Line3DBox[{708, 876, 2011, 709, 885, 2019, 724, 2075, 895, 734, 2079, 
       905, 745, 1359, 2199, 916, 757, 2092, 1228, 928, 770, 2189, 1317, 1031,
        1233, 1234, 1235, 783, 1033, 1130, 1131, 1132, 2147, 1201, 1200, 1035,
        1180, 961, 2148, 806, 1161, 1036, 1135, 2146, 1136, 1137, 1205, 1162, 
       1038, 2159, 1142, 1143, 1144, 832, 1110, 1040, 2154, 1325, 1183, 1184, 
       1249, 1209, 2131, 1083, 1084, 1005, 856, 2142, 1087, 1166, 1016, 868}],
       Line3DBox[{710, 877, 2012, 711, 886, 2020, 725, 896, 2025, 735, 2080, 
       906, 746, 2085, 917, 758, 2093, 1360, 929, 771, 2103, 1232, 941, 784, 
       1318, 1034, 1239, 1241, 2174, 1242, 795, 1076, 1292, 962, 2149, 807, 
       1037, 1138, 1140, 2158, 1141, 819, 1319, 1039, 2190, 1245, 1247, 1248, 
       833, 1163, 2122, 1041, 1145, 1147, 1148, 845, 2132, 1044, 1149, 1253, 
       1254, 857, 1210, 2143, 1049, 1088, 1111, 1112, 1211}], 
      Line3DBox[{712, 878, 2013, 713, 887, 2021, 726, 897, 2026, 736, 907, 
       2029, 747, 2086, 918, 759, 2094, 930, 772, 2104, 1361, 1362, 1363, 
       1364, 1237, 1240, 1238, 2041, 1340, 1077, 1293, 1078, 2048, 1294, 1093,
        1188, 1079, 1139, 1080, 2055, 1331, 1332, 1243, 2175, 1246, 1244, 
       1277, 1278, 2183, 1042, 1146, 1043, 1099, 1164, 2160, 1045, 1150, 1046,
        1165, 1085, 1106, 2153, 1050, 1089, 1051, 1090}], 
      Line3DBox[{714, 879, 2014, 715, 888, 2022, 727, 898, 2027, 737, 908, 
       2030, 748, 919, 2032, 760, 2095, 931, 773, 2105, 942, 785, 1377, 1378, 
       2042, 1379, 1380, 1301, 1303, 1302, 2049, 1341, 1342, 1304, 1306, 2187,
        1305, 820, 1365, 2200, 1366, 1367, 1368, 1250, 2176, 1252, 1251, 1279,
        1280, 2184, 1047, 1151, 1048, 1100, 2151, 1167, 1052, 1152, 1053, 
       1153}], Line3DBox[{716, 1057, 1058, 2015, 717, 889, 2023, 728, 899, 
       2028, 738, 909, 2031, 749, 920, 2033, 761, 932, 2034, 774, 2106, 943, 
       786, 952, 2043, 796, 963, 2050, 808, 973, 2056, 821, 984, 2061, 834, 
       1369, 2201, 1370, 1371, 1372, 2202, 1373, 1256, 1255, 1333, 2193, 1334,
        1335, 1258, 1257, 869}], 
      Line3DBox[{859, 1007, 2134, 847, 996, 2124, 836, 986, 2117, 823, 975, 
       2112, 810, 965, 2110, 798, 954, 2108, 788, 2035, 945, 776, 934, 2097, 
       763, 922, 2088, 751, 911, 2082, 740, 901, 2077, 730, 891, 2073, 719, 
       881, 2165, 1281, 1309, 1308, 697, 2166, 871, 1307, 1113, 1156, 1155, 
       1154}], Line3DBox[{860, 1008, 2135, 848, 997, 2125, 837, 987, 2118, 
       824, 976, 2113, 811, 966, 799, 2044, 955, 789, 2036, 946, 777, 935, 
       2098, 764, 923, 2089, 752, 912, 2083, 741, 902, 2078, 731, 892, 2167, 
       1261, 1212, 1312, 720, 1311, 2188, 1310, 1117, 1018, 1320, 1189, 1190, 
       1116, 1115, 1114, 1017, 1168, 1054}], 
      Line3DBox[{861, 1009, 2136, 849, 998, 2126, 838, 988, 2119, 825, 977, 
       2114, 812, 2051, 967, 800, 2045, 956, 790, 2037, 947, 778, 936, 2099, 
       765, 924, 2090, 753, 913, 2084, 742, 492, 493, 1775, 232, 313, 1672, 
       230, 416, 266, 1645, 228, 265}], 
      Line3DBox[{866, 1014, 2140, 854, 1003, 2129, 843, 993, 2121, 830, 982, 
       2115, 817, 971, 2181, 1275, 1337, 1336, 804, 959, 1289, 2186, 1288, 
       1075, 1203, 1204, 1202, 793, 950, 2161, 1236, 1179, 1072, 1178, 1177, 
       781, 939, 1231, 1125, 2156, 1028, 768, 926, 1124, 1123, 2155, 1027, 
       755, 914, 1224, 1223, 1314, 2171, 1313, 743, 903, 2169, 1219, 732, 893,
        2196, 1353, 722, 883, 2070, 705, 874, 2068, 703}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
vn8R8mp2iYSaq807PnhR0RpZ1zFxgwlQVJKw8TCLgRXFKxlWhVR05OWd23Lb
J2Cd+8wPi/ds3THNzf12jIq85bh4XnSTIP+8uvR1uVhQeXMrSuUWDR23qd34
hp8EVCvO8X/2cTC1epkzsB9zBjIwZ0ANzzd34vlmOZ5vxmGeQALmCVhinoBJ
+r4NK7OnkNDRvBb1lCl4EPNEz6AhGP6zStttxTON7j0L+LSShwy2O/ZYxueF
wRs5jcYPxdPoTrnIFk7TSYDAfRXSuyLgIM6zx3GeNcB5lrpkNb6Vrfe++e2d
1PenoKpAG6e0jeFwQtQl/7z2ZzRkr0f+18EuPqgeJuS8OND/fufh1Tv9SLx9
w03Bn0z4ljBi/2JdGEhcr6ixJ39BGt1B2YefMOHshF3BXht/kEto+DdhNoRq
b7qVOEkyoS3/b30o1QvEGlWfHjIdRpVcFvY2TAaUPqxvtvvkBrdrr0Xxco4g
nhtPl0LqGKAVccXTOPAxfEF7SIyYEXTWgTMpIoMB4uSk1I4LjhAzefE28fcI
Unl8UcoqgAGpzVOvHPsfgZ/AzIofZ0fR0TAKv5wdO/7KJHbnoC28VL4ZpoMm
gDhbqTK2j4rq6Zf39UtHwKXcFccfCU2A820Tp0n293WvII6SKBwI81505H5r
CGWzpPk+7GVC6crb+w3+xMNU8i6nKNYIelm3I7MziAE+14yJO7LCoXjka2ah
/Bjq1FcTyFdmsHUEk3Y2MwAqUXp31uwYeicpN1C5igGGbhX66ePeoMdz+HiE
zTg65di+XXScDprufE2XrT1AYETv3x92/XGtXWRStZEOgukHLD0ZT6DTiSxp
sIGAhN5OufuW0YGU+VdANNQJdIy4q9eLEVBjuwLfmkw6XB90TNOYsYdTGh75
wZIExFq34/bdNDrY2i46B763A10JneDLAiRobapYqGB/v2pvzqdw9AWBYICb
eh2FyNZfVUtcfjRku7hXMuqML/R/krdn2pJgtuPEy+K9NAQ/W9QetUXCtflZ
9ajdBHTNnb/qWgYd/Adre27xxsG/bYelr9sT0LZrXJO/bOjwb/N9Rh5HGOwL
r+Q4m0lAZZt7Sl9cpMMe2kFeg8/+sF1JPt4GEVBdlnUolxYdaKc/KOlYeMP9
8n7v+B4CWvX+CGe9Ch2kf9zLeT/iDhoyD2SvkwhIc/CZV6EsHWJPzT02jnoC
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 276.46661169698837`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.4, 0.95}, {0, 0.2}, {2.1731906320401375`, 
    28.646195436615848`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.7615200698747097, -1.0008748817644377`, -3.1413908789310376`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.697220790141839*^9, 3.6972212322060432`*^9, 3.697221286896336*^9, 
   3.697307948521779*^9, 3.697308070202342*^9, {3.6973081621227703`*^9, 
   3.697308172224036*^9}, {3.697308263913271*^9, 3.6973082934749937`*^9}, 
   3.6973083315213423`*^9, {3.697308415888908*^9, 3.697308437730905*^9}, 
   3.697329190264772*^9}]
}, Open  ]],

Cell["MLE Variance and Goodness-of-fit", "Text",
 CellChangeTimes->{{3.6966968117238493`*^9, 3.696696865555125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "List", " ", "of", " ", "\"\<Means\>\"", " ", "for", " ", "solid", " ", 
    "cancer", " ", "rate", " ", "distributions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ymean", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"0", ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<", 
      RowBox[{"n", "+", "1"}]}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{
      RowBox[{"ymean", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "=", 
      RowBox[{"fitDE", "[", 
       RowBox[{
        RowBox[{"datapts", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", "MLE1", ",", "MLE2"}], 
       "]"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Simulate", " ", "Data"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MLE1sim", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MLE2sim", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CHIsim", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samplenum", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "0"}], ",", 
     RowBox[{"j", "<", "samplenum"}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{
      RowBox[{"ysim", "=", 
       RowBox[{"Array", "[", 
        RowBox[{"0", ",", "n"}], "]"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<", 
         RowBox[{"n", "+", "1"}]}], ",", 
        RowBox[{"k", "++"}], ",", 
        RowBox[{
         RowBox[{"ysim", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "=", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"ymean", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"stdev", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Find", " ", "MLEs"}], "..."}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"y", "=", "ysim"}], ";", 
      RowBox[{"simfit", "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"chisqDE", "[", 
           RowBox[{"lambda1", ",", "lambda2"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lambda1", ",", "0.6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"lambda2", ",", "0.05"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"simfit2", "=", 
         RowBox[{"FindMinimum", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"chisqDE", "[", 
              RowBox[{"lambda1", ",", "lambda2"}], "]"}], ",", 
             RowBox[{"lambda2", "\[GreaterEqual]", "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"lambda1", ",", "0.6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"lambda2", ",", "0.005"}], "}"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"simfit", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"simfit1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<", 
            RowBox[{"simfit2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "simfit1", ",", 
           "simfit2"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"MLE1sim", ",", 
        RowBox[{"lambda1", "/.", 
         RowBox[{"simfit", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"MLE2sim", ",", 
        RowBox[{"lambda2", "/.", 
         RowBox[{"simfit", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Find", " ", "Min", " ", 
         RowBox[{"Chi", "^", "2"}]}], "..."}], "*)"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"CHIsim", ",", 
        RowBox[{"simfit", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.696696874575686*^9, 3.696696874896337*^9}, {
   3.696697048908207*^9, 3.696697144939941*^9}, {3.696697769306251*^9, 
   3.696697815047481*^9}, {3.696697915926765*^9, 3.696697917946797*^9}, {
   3.696698278475387*^9, 3.696698466670898*^9}, 3.696698517796177*^9, {
   3.6966987728964987`*^9, 3.696698774402028*^9}, {3.696698810414393*^9, 
   3.696698818544504*^9}, {3.6966988568827133`*^9, 3.696698922774078*^9}, {
   3.696699518895047*^9, 3.6966995512877083`*^9}, {3.696699936539386*^9, 
   3.696700008845174*^9}, {3.696700068133554*^9, 3.696700109432225*^9}, {
   3.696700165113268*^9, 3.696700199384753*^9}, {3.696700242566399*^9, 
   3.696700323795388*^9}, {3.696700514001656*^9, 3.696700709123028*^9}, {
   3.6967010294431353`*^9, 3.696701119098714*^9}, 3.696701228294838*^9, {
   3.6967012613435383`*^9, 3.696701399257016*^9}, 3.696701496212192*^9, {
   3.696701674256426*^9, 3.696701791635518*^9}, 3.696701924091153*^9, {
   3.696703852816544*^9, 3.696703971788478*^9}, {3.696791113461769*^9, 
   3.696791113822091*^9}, {3.69679114767103*^9, 3.69679126878153*^9}, {
   3.6967913136590557`*^9, 3.696791318764228*^9}, 3.696791354383563*^9, {
   3.69679148327701*^9, 3.6967915197526827`*^9}, {3.6967915809777737`*^9, 
   3.6967915865888987`*^9}, {3.696791662082683*^9, 3.696791668234805*^9}, {
   3.696791704503532*^9, 3.696791730415653*^9}, {3.696791890812435*^9, 
   3.6967919790442123`*^9}, {3.696802768472556*^9, 3.696802815957279*^9}, {
   3.696802936635556*^9, 3.696802938697991*^9}, {3.696803861785619*^9, 
   3.696803870475689*^9}, {3.69680404367352*^9, 3.696804054833247*^9}, {
   3.696804647924971*^9, 3.696804648590242*^9}, {3.696807005714723*^9, 
   3.6968070387151957`*^9}, {3.696807112119142*^9, 3.696807268356496*^9}, {
   3.697217200889451*^9, 3.6972172069034233`*^9}, {3.6972172699987707`*^9, 
   3.697217347318042*^9}, 3.697217570958454*^9, {3.697217626810199*^9, 
   3.697217693045232*^9}, {3.697218030615177*^9, 3.697218031428125*^9}, {
   3.697218896889838*^9, 3.697218908381463*^9}, {3.697219003358386*^9, 
   3.697219052286069*^9}, {3.697219171256868*^9, 3.6972191754184523`*^9}, {
   3.697219235373934*^9, 3.697219247879417*^9}, 3.697219478827921*^9, {
   3.697219544677187*^9, 3.697219551910297*^9}, 3.697219892264491*^9, 
   3.697219958465534*^9, {3.6972202564340973`*^9, 3.697220280793288*^9}, {
   3.697220368324964*^9, 3.697220404854816*^9}, 3.697220455104041*^9, 
   3.697220985072138*^9, {3.697221535480908*^9, 3.697221546585713*^9}, {
   3.697221682011026*^9, 3.6972217468501463`*^9}, {3.697221805752838*^9, 
   3.697221859889266*^9}, {3.697221925522972*^9, 3.69722193182178*^9}, {
   3.697221965193782*^9, 3.697222004561729*^9}, {3.697222248120096*^9, 
   3.6972222701366873`*^9}, {3.6973084836386766`*^9, 3.697308521462388*^9}, {
   3.69730859652712*^9, 3.697308613037356*^9}, {3.6973087704124002`*^9, 
   3.6973087810458317`*^9}, {3.697329225802093*^9, 3.697329253022875*^9}, {
   3.69732965851492*^9, 3.697329659170053*^9}, 3.6973297022782097`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.697217432989211*^9, 3.697217573365966*^9, 3.6972176951176147`*^9, 
   3.6972180391444473`*^9, 3.6972189137945967`*^9, {3.6972190375512342`*^9, 
   3.697219053857847*^9}, 3.6972191767066402`*^9, 3.6972192495758553`*^9, 
   3.697219480861533*^9, 3.6972195540864983`*^9, 3.697219900097601*^9, 
   3.697219959747476*^9, 3.697220284240587*^9, 3.697220385666852*^9, 
   3.697220419445315*^9, 3.69722046218967*^9, 3.69722155323251*^9, 
   3.697222015208304*^9, 3.697222272767824*^9, 3.6973085239510202`*^9, 
   3.697308637530698*^9, 3.697308784658119*^9, 3.69732926611721*^9, 
   3.697329722153699*^9, 3.697446226847951*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.697217432989211*^9, 3.697217573365966*^9, 3.6972176951176147`*^9, 
   3.6972180391444473`*^9, 3.6972189137945967`*^9, {3.6972190375512342`*^9, 
   3.697219053857847*^9}, 3.6972191767066402`*^9, 3.6972192495758553`*^9, 
   3.697219480861533*^9, 3.6972195540864983`*^9, 3.697219900097601*^9, 
   3.697219959747476*^9, 3.697220284240587*^9, 3.697220385666852*^9, 
   3.697220419445315*^9, 3.69722046218967*^9, 3.69722155323251*^9, 
   3.697222015208304*^9, 3.697222272767824*^9, 3.6973085239510202`*^9, 
   3.697308637530698*^9, 3.697308784658119*^9, 3.69732926611721*^9, 
   3.697329722153699*^9, 3.69744622690419*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.697217432989211*^9, 3.697217573365966*^9, 3.6972176951176147`*^9, 
   3.6972180391444473`*^9, 3.6972189137945967`*^9, {3.6972190375512342`*^9, 
   3.697219053857847*^9}, 3.6972191767066402`*^9, 3.6972192495758553`*^9, 
   3.697219480861533*^9, 3.6972195540864983`*^9, 3.697219900097601*^9, 
   3.697219959747476*^9, 3.697220284240587*^9, 3.697220385666852*^9, 
   3.697220419445315*^9, 3.69722046218967*^9, 3.69722155323251*^9, 
   3.697222015208304*^9, 3.697222272767824*^9, 3.6973085239510202`*^9, 
   3.697308637530698*^9, 3.697308784658119*^9, 3.69732926611721*^9, 
   3.697329722153699*^9, 3.697446226951364*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"FindMinimum\\\", \\\"::\\\", \
\\\"lstol\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.697217432989211*^9, 3.697217573365966*^9, 3.6972176951176147`*^9, 
   3.6972180391444473`*^9, 3.6972189137945967`*^9, {3.6972190375512342`*^9, 
   3.697219053857847*^9}, 3.6972191767066402`*^9, 3.6972192495758553`*^9, 
   3.697219480861533*^9, 3.6972195540864983`*^9, 3.697219900097601*^9, 
   3.697219959747476*^9, 3.697220284240587*^9, 3.697220385666852*^9, 
   3.697220419445315*^9, 3.69722046218967*^9, 3.69722155323251*^9, 
   3.697222015208304*^9, 3.697222272767824*^9, 3.6973085239510202`*^9, 
   3.697308637530698*^9, 3.697308784658119*^9, 3.69732926611721*^9, 
   3.697329722153699*^9, 3.697446226959713*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Calculate", " ", "Standard", " ", "Deviation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"MLE1sim", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"MLE2sim", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "samplenum"}], "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Slope MLE from Simulation\>\"", ",", " ", 
        "\"\<Cutoff MLE from Simulation\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontSize", "\[Rule]", "16"}], ",", " ", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varMLE1", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "samplenum"}], ")"}], "*", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MLE1sim", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "MLE1"}], ")"}], "^", "2"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "samplenum"}], "}"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varMLE2", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "samplenum"}], ")"}], "*", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MLE2sim", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "MLE2"}], ")"}], "^", "2"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "samplenum"}], "}"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"stdevMLE1", "=", 
    RowBox[{"Sqrt", "[", "varMLE1", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"stdevMLE2", "=", 
    RowBox[{"Sqrt", "[", "varMLE2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.696792013986655*^9, 3.696792084426713*^9}, {
   3.696792151567356*^9, 3.696792198608425*^9}, {3.69679223297505*^9, 
   3.696792311459282*^9}, {3.696792347347474*^9, 3.696792359751788*^9}, {
   3.696802615824795*^9, 3.696802764285775*^9}, {3.696802809609568*^9, 
   3.696802848465136*^9}, {3.6968073068614683`*^9, 3.6968073123658237`*^9}, {
   3.6968073642630568`*^9, 3.696807537140029*^9}, 3.697218117540586*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
       "]],
      FontFamily->"Helvetica"]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.40211096676681335`, 0},
  BaseStyle->{FontSize -> 16, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Cutoff MLE from Simulation\"", TraditionalForm], None}, {
     FormBox["\"Slope MLE from Simulation\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  LabelStyle->Bold,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.4088364368596907, 
   0.8392665228038411}, {-0.028201233517938015`, 0.2011898201835553}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.697218056225668*^9, 3.697218120125218*^9, {3.697218935737094*^9, 
   3.697218941341337*^9}, 3.697219068064843*^9, 3.697219186419442*^9, 
   3.697219326689756*^9, 3.6972195157360563`*^9, 3.6972196379829693`*^9, 
   3.697219920568136*^9, 3.6972199780801697`*^9, 3.69722035026963*^9, 
   3.6972216227786617`*^9, 3.697222163353355*^9, 3.697222409035767*^9, 
   3.697329552260844*^9, 3.697329770172633*^9, 3.6974462372239656`*^9}],

Cell[BoxData["0.062491855749543704`"], "Output",
 CellChangeTimes->{
  3.697218056225668*^9, 3.697218120125218*^9, {3.697218935737094*^9, 
   3.697218941341337*^9}, 3.697219068064843*^9, 3.697219186419442*^9, 
   3.697219326689756*^9, 3.6972195157360563`*^9, 3.6972196379829693`*^9, 
   3.697219920568136*^9, 3.6972199780801697`*^9, 3.69722035026963*^9, 
   3.6972216227786617`*^9, 3.697222163353355*^9, 3.697222409035767*^9, 
   3.697329552260844*^9, 3.697329770172633*^9, 3.697446237239325*^9}],

Cell[BoxData["0.031945409947335836`"], "Output",
 CellChangeTimes->{
  3.697218056225668*^9, 3.697218120125218*^9, {3.697218935737094*^9, 
   3.697218941341337*^9}, 3.697219068064843*^9, 3.697219186419442*^9, 
   3.697219326689756*^9, 3.6972195157360563`*^9, 3.6972196379829693`*^9, 
   3.697219920568136*^9, 3.6972199780801697`*^9, 3.69722035026963*^9, 
   3.6972216227786617`*^9, 3.697222163353355*^9, 3.697222409035767*^9, 
   3.697329552260844*^9, 3.697329770172633*^9, 3.697446237245219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Determine", " ", "Goodness"}], "-", "of", "-", "fit"}], " ", 
    "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"fraction", " ", "of", " ", "CHIsim", " ", "that", " ", "are"}],
       " ", "<"}], "/=", " ", "minCHI"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"CHIsim", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "8", ",", "0.2"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Min \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) from \
Simulation\>\"", ",", " ", "\"\<\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontSize", "\[Rule]", "16"}], ",", " ", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"pDE", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"CHIsim", ",", 
        RowBox[{"chi_", "/;", " ", 
         RowBox[{"chi", "<", "DEminCHI"}]}]}], "]"}], "/", "samplenum"}], "//",
      "N"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.6968035220130167`*^9, {3.6968039025356817`*^9, 3.696803965567337*^9}, {
   3.696804074337249*^9, 3.696804074672658*^9}, {3.696804135127859*^9, 
   3.696804145006219*^9}, {3.696804187207876*^9, 3.696804212490498*^9}, {
   3.696804350397633*^9, 3.6968044230955563`*^9}, {3.696804473485921*^9, 
   3.69680447529095*^9}, {3.696804539217684*^9, 3.6968045403712807`*^9}, {
   3.696804688265112*^9, 3.6968046913227654`*^9}, {3.696807837591555*^9, 
   3.6968078645442047`*^9}, {3.6972184570009317`*^9, 3.697218469744741*^9}, {
   3.6974462431865177`*^9, 3.697446258094446*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.40599999999999997`], Thickness[Small]}], 
     RectangleBox[{0.2, 0}, {0.4, 9},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6000000000000001, 21},
      RoundingRadius->0], RectangleBox[{0.6000000000000001, 0}, {0.8, 53},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 68},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.2000000000000002`, 66},
      RoundingRadius->0], 
     RectangleBox[{1.2000000000000002`, 0}, {1.4000000000000001`, 87},
      RoundingRadius->0], RectangleBox[{1.4000000000000001`, 0}, {1.6, 69},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 96},
      RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 94},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 69},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4000000000000004`, 77},
      RoundingRadius->0], RectangleBox[{2.4000000000000004`, 0}, {2.6, 66},
      RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8000000000000003`, 43},
      RoundingRadius->0], RectangleBox[{2.8000000000000003`, 0}, {3., 38},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.2, 30},
      RoundingRadius->0], RectangleBox[{3.2, 0}, {3.4000000000000004`, 29},
      RoundingRadius->0], RectangleBox[{3.4000000000000004`, 0}, {3.6, 18},
      RoundingRadius->0], RectangleBox[{3.6, 0}, {3.8000000000000003`, 15},
      RoundingRadius->0], RectangleBox[{3.8000000000000003`, 0}, {4., 15},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.2, 9},
      RoundingRadius->0], RectangleBox[{4.2, 0}, {4.4, 5},
      RoundingRadius->0], RectangleBox[{4.4, 0}, {4.6000000000000005`, 7},
      RoundingRadius->0], 
     RectangleBox[{4.6000000000000005`, 0}, {4.800000000000001, 2},
      RoundingRadius->0], RectangleBox[{4.800000000000001, 0}, {5., 4},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.2, 1},
      RoundingRadius->0], RectangleBox[{5.2, 0}, {5.4, 5},
      RoundingRadius->0], RectangleBox[{5.4, 0}, {5.6000000000000005`, 1},
      RoundingRadius->0], 
     RectangleBox[{5.6000000000000005`, 0}, {5.800000000000001, 3},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.16, 0},
  BaseStyle->{FontSize -> 16, FontFamily -> "Helvetica"},
  Frame->True,
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], None}, {
     FormBox[
     "\"Min \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \\(2\\)]\\) from Simulation\
\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->Bold,
  PlotRange->{{0., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6972182635055037`*^9, {3.6972184596237698`*^9, 3.697218471010231*^9}, 
   3.697218946288118*^9, 3.69721907605579*^9, 3.6972193356490602`*^9, 
   3.6972196944852467`*^9, 3.697220017087764*^9, 3.6972224267350388`*^9, 
   3.6973298005826*^9, 3.697446261143407*^9}],

Cell[BoxData["0.625`"], "Output",
 CellChangeTimes->{
  3.6972182635055037`*^9, {3.6972184596237698`*^9, 3.697218471010231*^9}, 
   3.697218946288118*^9, 3.69721907605579*^9, 3.6972193356490602`*^9, 
   3.6972196944852467`*^9, 3.697220017087764*^9, 3.6972224267350388`*^9, 
   3.6973298005826*^9, 3.69744626117083*^9}]
}, Open  ]],

Cell["Plot of DE Fit", "Text",
 CellChangeTimes->{{3.6967908577849894`*^9, 3.6967908720161047`*^9}, {
  3.6968078855647297`*^9, 3.696807885856605*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DEfitplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fitDE", "[", 
      RowBox[{"x", ",", "MLE1", ",", "MLE2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "8.5"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", "DEfitplot"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.696790888593877*^9, {3.6968079300760183`*^9, 3.696807951561254*^9}, {
   3.697220050920206*^9, 3.6972200597695303`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      StyleBox[{
        PointBox[{{0.031, 0.}, {0.15, 0.045}, {0.312, 0.179}, {0.507, 
         0.11900000000000001`}, {0.626, 0.28300000000000003`}, {0.864, 
         0.536}, {1.117, 0.805}, {1.369, 0.64}, {1.607, 1.043}, {1.86, 
         1.117}}], {{
          LineBox[{{0.031, 0.036000000000000004`}, {
           0.031, -0.036000000000000004`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.031, 0.036000000000000004`}], 
            Offset[{-1.5, 0}, {0.031, 0.036000000000000004`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.031, -0.036000000000000004`}], 
            Offset[{-1.5, 0}, {0.031, -0.036000000000000004`}]}]}, {
          LineBox[{{0.15, 0.105}, {0.15, -0.015}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.15, 0.105}], 
            Offset[{-1.5, 0}, {0.15, 0.105}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.15, -0.015}], 
            Offset[{-1.5, 0}, {0.15, -0.015}]}]}, {
          LineBox[{{0.312, 0.255}, {0.312, 0.103}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.312, 0.255}], 
            Offset[{-1.5, 0}, {0.312, 0.255}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.312, 0.103}], 
            Offset[{-1.5, 0}, {0.312, 0.103}]}]}, {
          LineBox[{{0.507, 0.267}, {0.507, -0.028999999999999984`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.507, 0.267}], 
            Offset[{-1.5, 0}, {0.507, 0.267}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.507, -0.028999999999999984`}], 
            Offset[{-1.5, 0}, {0.507, -0.028999999999999984`}]}]}, {
          LineBox[{{0.626, 0.41700000000000004`}, {0.626, 
           0.14900000000000002`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.626, 0.41700000000000004`}], 
            Offset[{-1.5, 0}, {0.626, 0.41700000000000004`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.626, 0.14900000000000002`}], 
            Offset[{-1.5, 0}, {0.626, 0.14900000000000002`}]}]}, {
          LineBox[{{0.864, 0.714}, {0.864, 0.35800000000000004`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.864, 0.714}], 
            Offset[{-1.5, 0}, {0.864, 0.714}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.864, 0.35800000000000004`}], 
            Offset[{-1.5, 0}, {0.864, 0.35800000000000004`}]}]}, {
          LineBox[{{1.117, 1.065}, {1.117, 0.545}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.117, 1.065}], 
            Offset[{-1.5, 0}, {1.117, 1.065}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.117, 0.545}], 
            Offset[{-1.5, 0}, {1.117, 0.545}]}]}, {
          LineBox[{{1.369, 0.924}, {1.369, 0.356}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.369, 0.924}], 
            Offset[{-1.5, 0}, {1.369, 0.924}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.369, 0.356}], 
            Offset[{-1.5, 0}, {1.369, 0.356}]}]}, {
          LineBox[{{1.607, 1.4829999999999999`}, {1.607, 0.603}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.607, 1.4829999999999999`}], 
            Offset[{-1.5, 0}, {1.607, 1.4829999999999999`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.607, 0.603}], 
            Offset[{-1.5, 0}, {1.607, 0.603}]}]}, {
          LineBox[{{1.86, 1.669}, {1.86, 0.565}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.86, 1.669}], 
            Offset[{-1.5, 0}, {1.86, 1.669}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.86, 0.565}], 
            Offset[{-1.5, 0}, {1.86, 0.565}]}]}}},
       FontFamily->"Helvetica"]}, {}}, {}}, {{{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], Dashing[{Small, Small}], 
       LineBox[{{1.7346938775510203`*^-7, 0.}, {0.0026071022183515673`, 0.}, {
        0.005214030967315379, 0.}, {0.010427888465243004`, 0.}, {
        0.020855603461098254`, 0.}, {0.04171103345280875, 0.}, {
        0.04431796220177256, 0.}, {0.046924890950736375`, 0.}, {
        0.052138748448663993`, 0.}, {0.06256646344451924, 0.}, {
        0.06517339219348306, 0.}, {0.06778032094244688, 0.}, {
        0.0729941784403745, 0.}, {0.0729941784403745, 0.}}], 
       LineBox[CompressedData["
1:eJwVxXk8lHkcAODBzJBcM/M6J7yzoVRjYkZpVL8vOkUSyYxxFbWOHMVaXavI
WEorpCyRyieRiHEnrXVUcuXIMuUox4okypGx7R/P52EcCTzoLU0gEBx/+P+q
R3dWBZOKESFVozTU1R09mHHRsS4oRioeG5zWZPijG1swfLWL6MfHRp83hKDo
802M76QShFuV6BPgDAqpjVrdWVCCnA0ijel9EcjOdtZASC5D/azXAfaOQkT2
7GKOF1ag07fLZ9x+uoa4O5rSecQaFF/MC3xJzUD3/eJzGS51iDdhY9Ienoe8
VptnPSmtQ0M2v0xb8h8i3d6RGzysHvnkZTwu4uaj69YW0Qmv6lG437RJ8uIj
dMlwxkMKGlHzzEvNvOpCdGSEpzag9xJNngzWCgQRii+8BgfCWpFRYBV91qoK
7Wa65SpbdKFutuHVCP069E7SLlaN6UdaWT0v9uq2ocv7YjUiOj6gc84B5lOx
3Sjqo3XBQOI4SpaSBA5feIuWvxdOx/w6hex6rWhTEYNoiFlbmebxBbFY0a1J
5GG0rKJzS8f8KzLkBxEbz4wh13X6LcL3c4ged3j+rOgj6p8oyPdvWERFWjqj
/lpT6O7IaJ9ZuAR1TitxBFWfUete02vl8QSILHGopDp9QQMhZleSlqSgf1MK
O506i2iVCawhBxkw4/Iu/1z4FTk7MXM+1RNh+4Jml+ypOVT+4gSLzSZD2z0j
l4ANC4jLJ7r+Gy0L7h3PalQbF1HzdrGn+zc5SH3qoJ4QvYQityso7bGTh3am
137bNctoX+K5hMnalSDI21IZEEoA1rNERpOxIiRvHvfXcpACjjyBpy1UAhti
X/wwQxps7ucf3zCvDHyWTc4qaRmoLeiJP5yjAiN/LrJPvZaByXCjoOKDFOBK
HAUPM4mQdUJvW5A8Fd5XM8/Z/0aCkYA68QcRFRSe7VRSsyODKFXWtyKQBnEM
ccqOjbJAYaedXWeAQUuYzlMnRTlYetN7xLEVgwTlDKffe+XgVE4VRxyjCrmk
jGH9yhUQLtzzj66pGlhtezs8GCcPiu0GZIlYDTJ9G6IinVfC+t3Z2ubJ6nDo
K4sev0kBep63ypmABsTUdjPKSYpACUt7J5zXAOonCb5/WBF6jGmxKdmaoCnw
/kOmTAlYvL4KywNaMFIdmp52SRmUcnd128jRgVxzsc3ORAXOywsaVIrp4Gzh
e9kzVQXCkqh32AGroCM4wWrtSgpIYumkaT1t4KRfed4fTgG1qy1c3xZtcPDJ
ERoOUKD0iZ7AIkYH0t8TLdfYU2F0Xs++naML2YQIjqicCvezwpokYl1IVG+d
5eA0mKsQadZZ4/BA7F7kc5UG3utJpcczcbi4QznH6BsN+M0UjeHbOGhzDWQk
czQ4EKwT7nUHhwrWNtdXCzTYWrrZ3DMbhy9afhR/CQ2oVr5P+Xk4HP1cH55D
wqCa39JgW4aD1a3z1noYBmqxN9+wW3GQnpsY1zTGQIGZveVxGw4ZE8RdYyYY
SLU+Tt34GgfuED2zjIPBR9UmAbMLh5PNex0Pm2Hw121Jv0EfDoN371UlIQwC
y4+OaY7i8Le96xXl/Rh4CYKsb4zh4L47ZOStHQb85bO5auM4LG6Ns8i3x2DX
zusnaJM4mK4tn7U5hMGqtsbPCjM43JNgbrECDKghnQfjZnGwmFlfxnPDQFZ9
sGjFNxzEY5ZUQw8MpgWLoeQFHFQ7g+objmIwuizbHbWIQ+ELIZ7ijYE4CzOT
WcLBtubW6WPHMWjfybh5QYLDqEjUYeqDQeMoc2F5GYdLuU1GJD8M/gOP6E3Q

        "]]}, {}}, {{}, {}, {}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 16, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Excess Relative Risk of Solid Cancer\"", TraditionalForm], 
     None}, {
     FormBox["\"Radiation Dose (Sv)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  LabelStyle->Bold,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.}, {-0.1, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6972186306879473`*^9, 3.69721908475753*^9, 3.6972191575226307`*^9, 
   3.697219343205353*^9, 3.697220026390772*^9, 3.697220062346912*^9, 
   3.69722257693291*^9, {3.697329815525618*^9, 3.6973298359305487`*^9}, 
   3.6974466080137663`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Comparing Fits",
 FontSize->18,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.696696365547844*^9, 3.696696436909037*^9}, {
  3.6966969520378304`*^9, 3.696696952925071*^9}, {3.696807980394812*^9, 
  3.6968080125368853`*^9}}],

Cell["Plot", "Text",
 CellChangeTimes->{{3.6967908577849894`*^9, 3.6967908720161047`*^9}, {
  3.6968078855647297`*^9, 3.696807885856605*^9}, {3.696808006648356*^9, 
  3.696808007464641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", "LRfitplot", ",", "DEfitplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.696808037014081*^9, 3.696808050021573*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      StyleBox[{
        PointBox[{{0.031, 0.}, {0.15, 0.045}, {0.312, 0.179}, {0.507, 
         0.11900000000000001`}, {0.626, 0.28300000000000003`}, {0.864, 
         0.536}, {1.117, 0.805}, {1.369, 0.64}, {1.607, 1.043}, {1.86, 
         1.117}}], {{
          LineBox[{{0.031, 0.036000000000000004`}, {
           0.031, -0.036000000000000004`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.031, 0.036000000000000004`}], 
            Offset[{-1.5, 0}, {0.031, 0.036000000000000004`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.031, -0.036000000000000004`}], 
            Offset[{-1.5, 0}, {0.031, -0.036000000000000004`}]}]}, {
          LineBox[{{0.15, 0.105}, {0.15, -0.015}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.15, 0.105}], 
            Offset[{-1.5, 0}, {0.15, 0.105}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.15, -0.015}], 
            Offset[{-1.5, 0}, {0.15, -0.015}]}]}, {
          LineBox[{{0.312, 0.255}, {0.312, 0.103}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.312, 0.255}], 
            Offset[{-1.5, 0}, {0.312, 0.255}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.312, 0.103}], 
            Offset[{-1.5, 0}, {0.312, 0.103}]}]}, {
          LineBox[{{0.507, 0.267}, {0.507, -0.028999999999999984`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.507, 0.267}], 
            Offset[{-1.5, 0}, {0.507, 0.267}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.507, -0.028999999999999984`}], 
            Offset[{-1.5, 0}, {0.507, -0.028999999999999984`}]}]}, {
          LineBox[{{0.626, 0.41700000000000004`}, {0.626, 
           0.14900000000000002`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.626, 0.41700000000000004`}], 
            Offset[{-1.5, 0}, {0.626, 0.41700000000000004`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.626, 0.14900000000000002`}], 
            Offset[{-1.5, 0}, {0.626, 0.14900000000000002`}]}]}, {
          LineBox[{{0.864, 0.714}, {0.864, 0.35800000000000004`}}], 
          LineBox[{
           Offset[{1.5, 0}, {0.864, 0.714}], 
            Offset[{-1.5, 0}, {0.864, 0.714}]}], 
          LineBox[{
           Offset[{1.5, 0}, {0.864, 0.35800000000000004`}], 
            Offset[{-1.5, 0}, {0.864, 0.35800000000000004`}]}]}, {
          LineBox[{{1.117, 1.065}, {1.117, 0.545}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.117, 1.065}], 
            Offset[{-1.5, 0}, {1.117, 1.065}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.117, 0.545}], 
            Offset[{-1.5, 0}, {1.117, 0.545}]}]}, {
          LineBox[{{1.369, 0.924}, {1.369, 0.356}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.369, 0.924}], 
            Offset[{-1.5, 0}, {1.369, 0.924}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.369, 0.356}], 
            Offset[{-1.5, 0}, {1.369, 0.356}]}]}, {
          LineBox[{{1.607, 1.4829999999999999`}, {1.607, 0.603}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.607, 1.4829999999999999`}], 
            Offset[{-1.5, 0}, {1.607, 1.4829999999999999`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.607, 0.603}], 
            Offset[{-1.5, 0}, {1.607, 0.603}]}]}, {
          LineBox[{{1.86, 1.669}, {1.86, 0.565}}], 
          LineBox[{
           Offset[{1.5, 0}, {1.86, 1.669}], 
            Offset[{-1.5, 0}, {1.86, 1.669}]}], 
          LineBox[{
           Offset[{1.5, 0}, {1.86, 0.565}], 
            Offset[{-1.5, 0}, {1.86, 0.565}]}]}}},
       FontFamily->"Helvetica"]}, {}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVxX8403kcAPCN+bE1P77foSk/vuLmedJSNx5K+bw7T+WYfjihbSpKPBWt
kFbrqjtljw5pdCIJ5XKuyJmwjvBI3YmNyo9aCFmWHylpynZ3f7yel1PU4eBo
AxKJFPSf/y/UGA8I/FN9bRVRBdxHx327bcXhp/jRqLci//RteShq5Te3beEn
ITzJYOqkfD9qEEef9uKfQxU9MtZe+THkY+b1wo2fg3SSzOZQ+XkkeuZIZfFv
opuR4ovb5JdR7horwpkvQ9onR5OD5KXo1sGMcid+K3KmTI4HymvQZvaucosN
z1GeLP0namUbGtB1qawlg8hLNq25m6tEvwSmMc88HUVPpCENJ9f1oJR3AZVD
Ug2SniprvMFTIf3XuzOS49OIlJhxyUUyhIbZLfKrez4gxZ0HAtb1EaS3dLjm
4PMJVWs6T9SUjaGI5d90po58RhOxkwGU0+NocKLyzqG2L6jh4Lmqs1kT6MaY
+qW3SIeO9Fjvf+U1jRTfe16qyyCB2Ykeu5bC92go0Ts9e4EMx3bvKESsD4gh
z3If/sEQqKP983mXPqLwUHbZ1EMKxN62W5Zh/wnV/R3nzuEYg/ITN8G/aA6t
5VEixs+bwL7BlIIhmhZ1+Koid8+ZQgtdJMWl8+hnX7q5/1YacPsSo5aRv6JA
6amsyZZFUKResfA4fQG5N0md2lebAVnU3eTN0CMPGmmnfao5tD594O6HSMC9
dSdmhdYChObHRjwpZGip7MsIK7OE1cwKI+Z9MkyKVgqrgzFIjhqQRwgNoDjO
Zb2QhsOyjomwKY4hjMW3qkZlOIxQz+wRjhuCLM/kQP1hBtBipresr6QAxrkq
Xs6yghpKeFfcUSNY6H0RFaKwguSjfs3prsaQUHbfQyWxhmtks1ytxhhEqf79
jp420L+H1x9SYgJmXSxjncoG8kmFdxlhpuC2udTeJ2cxNDc1xTssoULfY4Xp
t8AEXXBsLlNBBSz56kCqlglFRhO/7cqhQd9qRtqvpbYQLpl1zg5aBO47X9Z/
t20J5ATOerAN6GBevqmHa7oUvFZ1u+EP6fAjTdBmWb0UpkY8Mt+IzSA5Gy/h
xNsBXZ7Ya+xnDrq0pUYzLvZQoSyvSTOyAJvMzrUHOu0hpnY/WVdvAff+chFs
kDiA36A+9xWyBLXWZXuXhyMIuBljsnxLuFWc3K5TOUJteC6pcdYSPtfLbFsD
CGhLyqLHh2EQ7WZ0L+Y6AUMn2juyqzDgdWDMN0UEOLyJULpVY7DtiINoXwkB
gu1T3c0yDNbd8/KJLCWg1xXvm67FAPc70Mj7g4COp2HD3EYMGnidbUG1BMhX
Ds9R2jGwSbvSy1EQIH2tJZJGMaCzS9dUKQlQBl1wpo9hQFZU5a3qJsCizo5V
osbgnXW7gP2cgLRM5KbUYNBcpBtkvSTgzLpznuwZDA7X7X1rqyYg7rJlwKgO
g30CYUDuWwJ+JxdzxSQceHpxuY2GAPUhzlaGAQ6bNl6OY0wSEO0XGrLBCAc7
5aP39I8E8KfzdxUswgFPfBZ8YZaAK3x2pIcZDiaLX/9JnSPg+cOGvf+Y4zAj
+JJkPE/A9oKhWC2Gg1pv0pPyhYBM04SDFxk4qIqtvA0XCGhPoMS7WuPQtdHp
ylkdAdSBHGGDDQ6P1Ox5vZ6AzQGuCTuYOPwL41gkgQ==
       "]]}}, {}}, {{{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], Dashing[{Small, Small}], 
       LineBox[{{1.7346938775510203`*^-7, 0.}, {0.0026071022183515673`, 0.}, {
        0.005214030967315379, 0.}, {0.010427888465243004`, 0.}, {
        0.020855603461098254`, 0.}, {0.04171103345280875, 0.}, {
        0.04431796220177256, 0.}, {0.046924890950736375`, 0.}, {
        0.052138748448663993`, 0.}, {0.06256646344451924, 0.}, {
        0.06517339219348306, 0.}, {0.06778032094244688, 0.}, {
        0.0729941784403745, 0.}, {0.0729941784403745, 0.}}], 
       LineBox[CompressedData["
1:eJwVkmk81HkcgMcxM5Jhjr/7+onYDomhRPX7ig5yxsoxRKnktlhNSXwSVmJF
pVYXZYkcIdfUtmsdSRkKEbm2QaxQco9tXzyf5+3z4tE4GnzouCiJRHL6zv/m
FeeohJLL8V3RwIEIjyP44Vd3NauSclwSUuyncycAZ+4gkKZ7BaZvzZh50RiO
46NbNJbJT/Dz3/l6JDiLw+viNDtKnuCq1Phtyr0x2M5mVjuBUoV9qXVhDk4J
mOLdqTteWoN9llTnPNddwSYWLbdcxZ/jpk/XQl8y7+A8/5QCDfd63OBjwW7n
FmIfTdPsp5X1+ISq/5c9bo+w+vuRTFeiAYt3ppWVmRTha1Zm8WmvGrDF/n72
1aVifHHDVy8RaMLDxC6lwmel+OiIq9yg1kvsM9elFAwVOKX0CthH8rEPj6Yy
a87D+3U9C2TMOrFBzs7UmPX1uF/Y3iebOIDDk1qbLdXbcPLBJIWYtx+x8K29
6VRSF46bsCoZTB/HHQEvgwWxH/DqculM4ukpbMFDrKmYITysW1eb5fUFN/m6
8DMoArxKV7utZvoNIzVj8aazY9hj4/rWhH/mse9l2YWoigk88G9JUUDjEi5o
mxsJUJrC90dGe425QpxZPczm8KYx39LoSnUKCaYfaNYynb/gwXDjyxkrInD7
ozf7FnMWs2rT9IYdxcBcVD3Zt/QbdnHWzf/cIA6mP/V0UMPmcXVzoB6bTYHb
gjG3oM2L2MRN3ONTPBXmt59+Ltu0hF/v7vM+MicBD3rF5dPiV/CF3VLSB+wk
wcqTbmujs4oPpp9Lm6xbC/cUabVBESTQ+zNdo0WfBo4UXoCSowgYSpJcVROk
Idb7YYpAQxSs84pObl6QAReBfL6KqBjUlXSnHM6nQ2H33+ywN2Iwyd0SUn6I
AUatypxHd8UhO1BrV4gkE3wnp6MczpNhJKi+72MFE+SjqNJydhSouEn1qwlm
QQg767rFViow2FlRG7UJEE70PHOmScDKu/dHnfgEUGVdnX95LwFh+TzDvkRZ
qDnhLFhfuwa4CQd61I3kYEw7XTB0SRJo7doUYZ8c2Ixx4y64rIVN+3NVTa/K
A6ejXyllmxR0v+BLGIACCPQualSTacCIzOpPWFAApfJ8ZCugQbc+K+l6riI0
59J+FauSBj3X3po99kpQ/JvyrayLMiBdsK/LWkIZ1D2c2uwM6BAtyWmklyvD
/RyTZO+bdIjMYOawg1RAGO1l/sNaBgiTlMkzWqoQ5u7+YoDLALnUVhO/VlXQ
/hyRsGGQAZVPtThmiWrwSJ5vpuPAhNEFLYd2Q3UIm7M0rKhmQl52ZIuwTx0c
32XOGiIWzNdUKNZbIZCw1Sk7lcqC45vIlSfvIlg605G3ZY4Fbq8ZCoJ7CFT9
J0SF8yywD1Xj+uQgAHcxj1eLLNhZud3UOxdBvKk+I0DIAqa53x9uhQjoy8nc
fDIBz9xaG22qEGies7DSIgiQS7rxjs1HYHm+bFxRnwAp3dwdj9sQBAQ37x0z
IECE//jm1jcIUo4M3qkyJGBCtoWj24ngDZZxOmxMwF/3hAPavQg8SP68DExA
cPWxMcVRBKGx6y7L2BLgwwmxyhxDkB66Y+SDHQFuq1EFcuMInnjbmxU5ELBv
77VA1iSCZbPoWesfCVBpa5qW+vq9X7THI4lDADO849ClWQT5M1OVrp7fP5Ef
Klszh6B5iMrc4EXADGcpgrKIQKbOqKHxGAGjq9SuuCUEBmXW6PpxAvqyCWOx
FQROOcfOnDhJQPtejRuxQgQ/p595a3SKgKZR3cXVVQQ3LqRtIfsT8B/8u0y+

        "]]}, {}}, {{}, {}, {}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 16, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Excess Relative Risk of Solid Cancer\"", TraditionalForm], 
     None}, {
     FormBox["\"Radiation Dose (Sv)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  LabelStyle->Bold,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.}, {-0.1, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.697219726857728*^9, 3.6972197736933823`*^9, 
  3.6972200727012253`*^9, 3.697222581670312*^9, 3.697329889773892*^9}]
}, Open  ]],

Cell["Summary Table", "Text",
 CellChangeTimes->{{3.6967908577849894`*^9, 3.6967908720161047`*^9}, {
  3.6968078855647297`*^9, 3.696807885856605*^9}, {3.696808006648356*^9, 
  3.6968080308529377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Text", "[", "\"\<Fit Comparison\>\"", "]"}], ",", 
       "SpanFromLeft"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\>\"", ",", "\"\<Linear Relationship\>\"", ",", 
       "\"\<Delayed Effects\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Best Fit Curve\>\"", ",", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{"MLE", ",", "0.01"}], "]"}], "*", "x"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"MLE1", ",", "0.01"}], "]"}], "]"}], "<>", "\"\<x-\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"MLE2", ",", "0.01"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<St. Dev.\>\"", ",", 
       RowBox[{"Round", "[", 
        RowBox[{"stdevMLE", ",", "0.01"}], "]"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"stdevMLE1", ",", "0.01"}], "]"}], "]"}], "<>", "\"\<,\>\"",
         "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"stdevMLE2", ",", "0.01"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Goodness-of-fit\>\"", ",", "pLR", ",", "pDE"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696808089799111*^9, 3.696808159716815*^9}, {
  3.6968082410177593`*^9, 3.69680837803229*^9}, {3.6968084310995007`*^9, 
  3.696808523903891*^9}, {3.696809755149432*^9, 3.6968097771141043`*^9}, {
  3.697220130347969*^9, 3.697220196309085*^9}, {3.697222590278617*^9, 
  3.697222636918539*^9}, {3.697222675030054*^9, 3.697222765978571*^9}, {
  3.6972227988405733`*^9, 3.697222817911777*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"Fit Comparison\"\>", TextForm]], "InlineText"],
      Text["Fit Comparison"]], "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"\"\>", "\<\"Linear Relationship\"\>", "\<\"Delayed Effects\"\>"},
    {"\<\"Best Fit Curve\"\>", 
     RowBox[{"x", " ", 
      RowBox[{"Round", "[", 
       RowBox[{"MLE", ",", "0.01`"}], "]"}]}], "\<\"0.61x-0.05\"\>"},
    {"\<\"St. Dev.\"\>", 
     RowBox[{"Round", "[", 
      RowBox[{"stdevMLE", ",", "0.01`"}], "]"}], "\<\"0.06,0.03\"\>"},
    {"\<\"Goodness-of-fit\"\>", "pLR", "0.625`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.697220094186438*^9, 3.69722263901775*^9, {3.697222707734446*^9, 
   3.697222767930594*^9}, 3.697222828975666*^9, 3.697329893453669*^9, 
   3.697446616945705*^9}]
}, Open  ]]
},
WindowSize->{1280, 707},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 286, 5, 42, "Text"],
Cell[847, 27, 87, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[959, 32, 5466, 153, 233, "Input"],
Cell[6428, 187, 1606, 30, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8071, 222, 2366, 56, 114, "Input"],
Cell[10440, 280, 5499, 120, 463, "Output"]
}, Open  ]],
Cell[15954, 403, 214, 4, 35, "Text"],
Cell[16171, 409, 400, 8, 28, "Input"],
Cell[16574, 419, 111, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[16710, 424, 1526, 39, 80, "Input"],
Cell[18239, 465, 287, 4, 28, "Output"],
Cell[18529, 471, 284, 4, 28, "Output"]
}, Open  ]],
Cell[18828, 478, 116, 1, 30, "Text"],
Cell[18947, 481, 4380, 100, 216, "Input"],
Cell[CellGroupData[{
Cell[23352, 585, 1773, 46, 97, "Input"],
Cell[25128, 633, 3008, 58, 459, "Output"],
Cell[28139, 693, 175, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28351, 700, 1885, 45, 80, "Input"],
Cell[30239, 747, 3738, 69, 458, "Output"],
Cell[33980, 818, 336, 5, 28, "Output"]
}, Open  ]],
Cell[34331, 826, 100, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[34456, 831, 404, 12, 46, "Input"],
Cell[34863, 845, 6866, 145, 463, "Output"]
}, Open  ]],
Cell[41744, 993, 208, 4, 35, "Text"],
Cell[41955, 999, 1209, 27, 46, "Input"],
Cell[43167, 1028, 111, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[43303, 1033, 3398, 76, 114, "Input"],
Cell[46704, 1111, 889, 16, 41, "Message"],
Cell[47596, 1129, 460, 7, 28, "Output"],
Cell[48059, 1138, 464, 7, 28, "Output"],
Cell[48526, 1147, 458, 7, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49021, 1159, 611, 13, 28, "Input"],
Cell[49635, 1174, 139222, 2268, 291, "Output"]
}, Open  ]],
Cell[188872, 3445, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[189013, 3450, 7555, 169, 318, "Input"],
Cell[196571, 3621, 1316, 22, 41, "Message"],
Cell[197890, 3645, 1315, 22, 41, "Message"],
Cell[199208, 3669, 1316, 22, 41, "Message"],
Cell[200527, 3693, 1167, 21, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201731, 3719, 2778, 74, 148, "Input"],
Cell[204512, 3795, 22601, 384, 457, "Output"],
Cell[227116, 4181, 496, 7, 28, "Output"],
Cell[227615, 4190, 496, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228148, 4202, 1977, 47, 89, "Input"],
Cell[230128, 4251, 3490, 67, 467, "Output"],
Cell[233621, 4320, 318, 5, 28, "Output"]
}, Open  ]],
Cell[233954, 4328, 151, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[234130, 4334, 576, 15, 46, "Input"],
Cell[234709, 4351, 7702, 159, 463, "Output"]
}, Open  ]],
Cell[242426, 4513, 254, 5, 35, "Text"],
Cell[242683, 4520, 190, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[242898, 4527, 179, 3, 28, "Input"],
Cell[243080, 4532, 9415, 187, 463, "Output"]
}, Open  ]],
Cell[252510, 4722, 201, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[252736, 4729, 1884, 46, 80, "Input"],
Cell[254623, 4777, 991, 23, 145, "Output"]
}, Open  ]]
}
]
*)

